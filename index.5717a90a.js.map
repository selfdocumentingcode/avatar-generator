{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.js","node_modules/@swc/helpers/src/_class_private_field_get.js","node_modules/@swc/helpers/src/_class_apply_descriptor_get.js","node_modules/@swc/helpers/src/_check_private_redeclaration.js","node_modules/@swc/helpers/src/_class_private_field_init.js","node_modules/@swc/helpers/src/_class_private_field_set.js","node_modules/@swc/helpers/src/_class_apply_descriptor_set.js","node_modules/@swc/helpers/src/_class_private_method_get.js","node_modules/@swc/helpers/src/_class_private_method_init.js","node_modules/@swc/helpers/src/_define_property.js","src/config.js","src/avatarGenerator.js","src/utils.js","src/app.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration\";\n\nexport default function _classPrivateMethodInit(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export const colorPalette = [\r\n    '#11133c',\r\n    '#f9ead4',\r\n    '#030504',\r\n    '#ffffff',\r\n\r\n    '#79fe9d',\r\n    '#f9a86f',\r\n    '#f71e4d',\r\n\r\n    '#060fbf',\r\n    '#1d43c6',\r\n    '#eef5f9',\r\n    '#c3d5e1',\r\n    '#f2f2f2',\r\n\r\n    '#fcf8f3',\r\n];\r\n\r\nexport const componentFiles = {\r\n    body: 1,\r\n    eye: 2,\r\n    nosemouth: 2,\r\n    ear: 2\r\n};\r\n\r\nexport const componentDir = 'components';\r\nexport const canvasSize = 256;\r\nexport const defaultInput = '7e4ef0cc-cce3-4c61-be83-7091185d75d2';\r\n","import { colorPalette, componentFiles } from './config';\r\n\r\nexport class AvatarGenerator {\r\n    #hash;\r\n\r\n    #generatedBgColor;\r\n    #generatedBodyColor;\r\n\r\n    static bodyScaleRange = [-0.1, 0.1];\r\n\r\n    static eyesScaleRange = [-0.4, -0.2];\r\n    static eyesDistanceRange = [24, 48];\r\n\r\n    static nousemouthScaleRange = [-0.2, 0.2];\r\n\r\n    static earsScaleRange = [-0.4, -0.2];\r\n    static earsDistanceRange = [48, 64];\r\n    static earsRotation = [15, 45];\r\n\r\n    constructor(hash) {\r\n        this.#hash = hash;\r\n    }\r\n\r\n    getBackgroundColor() {\r\n        this.#generatedBgColor = this.#getColor();\r\n\r\n        return this.#generatedBgColor;\r\n    }\r\n\r\n    getBodyConfig() {\r\n        const salt = 3;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBgColor, '#030504']);\r\n\r\n        this.#generatedBodyColor = color;\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.bodyScaleRange, salt) + 1;\r\n\r\n        const bodyConfig = {\r\n            color,\r\n            scale,\r\n        };\r\n\r\n        return bodyConfig;\r\n    }\r\n\r\n    getEyesConfig() {\r\n        const salt = 5;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor]);\r\n        const variant = this.#getVariant('eye', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.eyesScaleRange, salt) + 1;\r\n        const distance = this.#getValueInRangeInt(AvatarGenerator.eyesDistanceRange, salt);\r\n\r\n        const eyesConfig = {\r\n            color,\r\n            scale,\r\n            distance,\r\n            variant,\r\n        };\r\n\r\n        return eyesConfig;\r\n    }\r\n\r\n    getNosemouthConfig() {\r\n        const salt = 7;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor]);\r\n        const variant = this.#getVariant('nosemouth', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.nousemouthScaleRange, salt) + 1;\r\n\r\n        const nosemouthConfig = {\r\n            color,\r\n            scale,\r\n            variant,\r\n        };\r\n\r\n        return nosemouthConfig;\r\n    }\r\n\r\n    getEarsConfig() {\r\n        const salt = 11;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor, this.#generatedBgColor]);\r\n        const variant = this.#getVariant('ear', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.earsScaleRange, salt) + 1;\r\n        const distance = this.#getValueInRangeInt(AvatarGenerator.earsDistanceRange, salt);\r\n\r\n        const rotation = this.#getValueInRangeInt(AvatarGenerator.earsRotation, salt);\r\n\r\n        const earsConfig = {\r\n            color,\r\n            scale,\r\n            distance,\r\n            variant,\r\n            rotation,\r\n        };\r\n\r\n        return earsConfig;\r\n    }\r\n\r\n    #getColor(salt = 1, excludeColors = undefined) {\r\n        const colors = excludeColors ? colorPalette.filter((c) => !excludeColors.includes(c)) : colorPalette;\r\n\r\n        return colors[this.#getSaltyHash(salt) % colors.length];\r\n    }\r\n\r\n    #getVariant(componentName, salt = 1) {\r\n        const variant = this.#getSaltyHash(salt) % componentFiles[componentName];\r\n\r\n        return variant;\r\n    }\r\n\r\n    #getValueInRangeFloat(range, salt = 1) {\r\n        const min = range[0] * 100;\r\n        const max = range[1] * 100;\r\n\r\n        const value = min + (this.#getSaltyHash(salt) % (max - min));\r\n\r\n        return value / 100;\r\n    }\r\n\r\n    #getValueInRangeInt(range, salt = 1) {\r\n        const min = range[0];\r\n        const max = range[1];\r\n\r\n        const value = min + (this.#getSaltyHash(salt) % (max - min));\r\n\r\n        return value;\r\n    }\r\n\r\n    #getSaltyHash(salt) {\r\n        const roundingFn = salt % 2 === 0 ? Math.ceil : Math.floor;\r\n\r\n        const saltyHash = Math.abs(roundingFn(this.#hash / salt));\r\n\r\n        return saltyHash;\r\n    }\r\n}\r\n","export function getHash(inputString) {\r\n    var hash = 0;\r\n    if (inputString.length == 0) return hash;\r\n\r\n    for (i = 0; i < inputString.length; i++) {\r\n        char = inputString.charCodeAt(i);\r\n        hash = (hash << 5) - hash + char;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n\r\n    return Math.abs(hash);\r\n}\r\n","import { AvatarGenerator } from './avatarGenerator';\r\nimport { getHash } from './utils';\r\nimport { componentFiles, componentDir, canvasSize, defaultInput } from './config';\r\n\r\nlet componentContainerEl;\r\nlet imgRendererEl;\r\nlet svgEditorEl;\r\nlet canvasEl;\r\nlet btnDownloadAvatarEl;\r\nlet btnRandomInputEl;\r\nlet aDownloaderEl;\r\nlet imgAvatarPreviewEl;\r\nlet inputTextEl;\r\nlet hashEl;\r\n\r\nlet hash;\r\nlet canvasCtx;\r\n\r\nconst componentElements = {};\r\n\r\nfunction updatePreview() {\r\n    const image = canvasEl.toDataURL('image/png');\r\n\r\n    imgAvatarPreviewEl.src = image;\r\n}\r\n\r\nfunction downloadAvatar() {\r\n    const image = canvasEl.toDataURL('image/png');\r\n\r\n    aDownloaderEl.href = image;\r\n    aDownloaderEl.click();\r\n    aDownloaderEl.href = null;\r\n}\r\n\r\nfunction generateNewHash(newValue) {\r\n    hash = getHash(newValue);\r\n\r\n    hashEl.value = hash;\r\n\r\n    generateAvatar();\r\n}\r\n\r\nfunction randomizeInput() {\r\n    const randomInput = crypto.randomUUID();\r\n\r\n    inputTextEl.value = randomInput;\r\n\r\n    generateNewHash(randomInput);\r\n}\r\n\r\nfunction handleInputChange(event) {\r\n    const inputValue = event?.currentTarget?.value ?? '';\r\n\r\n    generateNewHash(inputValue);\r\n}\r\n\r\nfunction queryElements() {\r\n    componentContainerEl = document.querySelector('#componentContainer');\r\n    imgRendererEl = document.querySelector('#imgRenderer');\r\n    svgEditorEl = document.querySelector('#svgEditor');\r\n    btnDownloadAvatarEl = document.querySelector('#btnDownloadAvatar');\r\n    btnRandomInputEl = document.querySelector('#btnRandomInput');\r\n    aDownloaderEl = document.querySelector('#downloader');\r\n    imgAvatarPreviewEl = document.querySelector('#avatarPreview');\r\n    inputTextEl = document.querySelector('#inputText');\r\n    hashEl = document.querySelector('#hash');\r\n\r\n    canvasEl = document.querySelector('#canvas');\r\n}\r\n\r\nfunction initializeStuff() {\r\n    inputTextEl.value = defaultInput;\r\n    hash = getHash(inputTextEl.value);\r\n    hashEl.value = hash;\r\n\r\n    canvasEl.width = canvasSize;\r\n    canvasEl.height = canvasSize;\r\n    canvasCtx = canvasEl.getContext('2d');\r\n\r\n    btnDownloadAvatarEl.addEventListener('click', downloadAvatar);\r\n    btnRandomInputEl.addEventListener('click', randomizeInput);\r\n    inputTextEl.addEventListener('change', handleInputChange);\r\n}\r\n\r\nasync function loadComponentImages() {\r\n    for (let z = 0; z < Object.keys(componentFiles).length; z++) {\r\n        var key = Object.keys(componentFiles)[z];\r\n        var count = componentFiles[key];\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            const imagePath = `/${componentDir}/${key}_${i}.svg`;\r\n\r\n            const res = await fetch(imagePath);\r\n            const text = await res.text();\r\n\r\n            const svg = new DOMParser().parseFromString(text, 'text/xml').firstChild;\r\n\r\n            const svgId = `svg-${key}-${i}`;\r\n            svg.id = svgId;\r\n\r\n            componentContainerEl.appendChild(svg);\r\n\r\n            componentElements[svgId] = svg;\r\n        }\r\n    }\r\n}\r\n\r\nasync function renderNosemouth(generator) {\r\n    const nousemouthConfig = generator.getNosemouthConfig();\r\n\r\n    initSvgEditor(`nosemouth-${nousemouthConfig.variant}`);\r\n\r\n    const newSize = applySvgTransforms({ color: nousemouthConfig.color, scale: nousemouthConfig.scale });\r\n\r\n    const nousemouthX = canvasEl.width / 2 - newSize.width / 2;\r\n    const nousemouthY = canvasEl.height / 2 - newSize.height / 2 + 8;\r\n\r\n    await renderEditedSvgToCanvas(nousemouthX, nousemouthY);\r\n}\r\n\r\nasync function renderEyes(generator) {\r\n    const eyesConfig = generator.getEyesConfig();\r\n\r\n    const translateY = -24;\r\n\r\n    // Left eye\r\n    initSvgEditor(`eye-${eyesConfig.variant}`);\r\n\r\n    const newLeftEyeSize = applySvgTransforms({ color: eyesConfig.color, scale: eyesConfig.scale });\r\n\r\n    const leftEyePositionX = canvasEl.width / 2 - newLeftEyeSize.width / 2 - eyesConfig.distance;\r\n    const leftEyePositionY = canvasEl.height / 2 - newLeftEyeSize.height / 2 + translateY;\r\n\r\n    await renderEditedSvgToCanvas(leftEyePositionX, leftEyePositionY);\r\n\r\n    // Right eye\r\n    initSvgEditor(`eye-${eyesConfig.variant}`);\r\n\r\n    const newRightEyeSize = applySvgTransforms({ color: eyesConfig.color, scale: eyesConfig.scale });\r\n\r\n    const rightEyePositionX = canvasEl.width / 2 - newRightEyeSize.width / 2 + eyesConfig.distance;\r\n    const rightEyePositionY = canvasEl.height / 2 - newRightEyeSize.height / 2 + translateY;\r\n\r\n    await renderEditedSvgToCanvas(rightEyePositionX, rightEyePositionY);\r\n}\r\n\r\nasync function renderEars(generator) {\r\n    const earsConfig = generator.getEarsConfig();\r\n\r\n    const translateY = -84;\r\n\r\n    // Left ear\r\n    initSvgEditor(`ear-${earsConfig.variant}`);\r\n\r\n    const newLeftEarSize = applySvgTransforms({\r\n        color: earsConfig.color,\r\n        scale: earsConfig.scale,\r\n        rotation: -earsConfig.rotation,\r\n    });\r\n\r\n    const leftEarPositionX = canvasEl.width / 2 - newLeftEarSize.width / 2 - earsConfig.distance;\r\n    const leftEarPositionY = canvasEl.height / 2 - newLeftEarSize.height / 2 + translateY;\r\n\r\n    await renderEditedSvgToCanvas(leftEarPositionX, leftEarPositionY);\r\n\r\n    // Right ear\r\n    initSvgEditor(`ear-${earsConfig.variant}`);\r\n\r\n    const newRightEearSize = applySvgTransforms({\r\n        color: earsConfig.color,\r\n        scale: earsConfig.scale,\r\n        rotation: earsConfig.rotation,\r\n    });\r\n\r\n    const rightEarPositionX = canvasEl.width / 2 - newRightEearSize.width / 2 + earsConfig.distance;\r\n    const rightEarPositionY = canvasEl.height / 2 - newRightEearSize.height / 2 + translateY;\r\n\r\n    await renderEditedSvgToCanvas(rightEarPositionX, rightEarPositionY);\r\n}\r\n\r\nasync function renderBody(generator) {\r\n    const bodyConfig = generator.getBodyConfig();\r\n\r\n    initSvgEditor('body-0');\r\n\r\n    const newBodySize = applySvgTransforms({ color: bodyConfig.color, scale: bodyConfig.scale });\r\n\r\n    const bodyPositionX = canvasEl.width / 2 - newBodySize.width / 2;\r\n    const bodyPositionY = canvasEl.height / 2 - newBodySize.height / 2;\r\n\r\n    await renderEditedSvgToCanvas(bodyPositionX, bodyPositionY);\r\n}\r\n\r\nasync function renderSvgToImage(svgString) {\r\n    imgRendererEl.src = null;\r\n\r\n    var svg64 = btoa(svgString);\r\n    var b64Start = 'data:image/svg+xml;base64,';\r\n    var image64 = b64Start + svg64;\r\n\r\n    const imgLoadPromise = new Promise((resolve) => (imgRendererEl.onload = resolve));\r\n\r\n    imgRendererEl.src = image64;\r\n\r\n    return imgLoadPromise;\r\n}\r\n\r\nasync function renderEditedSvgToCanvas(x, y) {\r\n    const component = svgEditorEl.children[0];\r\n\r\n    const svgString = new XMLSerializer().serializeToString(component);\r\n\r\n    await renderSvgToImage(svgString);\r\n\r\n    canvasCtx.drawImage(imgRendererEl, x, y);\r\n\r\n    updatePreview();\r\n}\r\n\r\nfunction initSvgEditor(svgId) {\r\n    svgEditorEl.innerHTML = '';\r\n\r\n    const component = componentElements[`svg-${svgId}`];\r\n\r\n    const svgElement = component.cloneNode(true);\r\n    svgElement.id = 'svg-clone';\r\n\r\n    svgEditorEl.appendChild(svgElement);\r\n}\r\n\r\nfunction applySvgTransforms(params) {\r\n    const color = params.color;\r\n    const scale = params.scale;\r\n    const rotation = params.rotation;\r\n\r\n    const svgEl = document.querySelector('#svg-clone');\r\n\r\n    const fillableEl = svgEl.querySelector('[fill]');\r\n\r\n    fillableEl.setAttributeNS(null, 'fill', color);\r\n    fillableEl.setAttributeNS(null, 'stroke', color);\r\n\r\n    const groupEl = svgEl.querySelector('g');\r\n\r\n    let gTransform = groupEl.getAttributeNS(null, 'transform') ?? '';\r\n\r\n    gTransform += ` scale(${scale})`;\r\n\r\n    if (rotation) {\r\n        const svgCenterX = svgEl.clientWidth / 2;\r\n        const svgCenterY = svgEl.clientHeight / 2;\r\n\r\n        gTransform += ` rotate(${rotation} ${svgCenterX} ${svgCenterY})`;\r\n    }\r\n\r\n    groupEl.setAttributeNS(null, 'transform', gTransform);\r\n\r\n    // const groupElWidth = groupEl.getBBox().width;\r\n    // const groupElHeight = groupEl.getBBox().height;\r\n\r\n    // const newWidth = svgEl.clientWidth * scale;\r\n    // const newHeight = svgEl.clientHeight * scale;\r\n\r\n    const newWidth = svgEl.clientWidth * scale;\r\n    const newHeight = svgEl.clientHeight * scale;\r\n\r\n    svgEl.setAttributeNS(null, 'width', newWidth);\r\n    svgEl.setAttributeNS(null, 'height', newHeight);\r\n\r\n    return {\r\n        width: newWidth,\r\n        height: newHeight,\r\n    };\r\n}\r\n\r\nfunction setCanvasBackground(generator) {\r\n    const bgColor = generator.getBackgroundColor();\r\n\r\n    canvasCtx.fillStyle = bgColor;\r\n    canvasCtx.fillRect(0, 0, canvasEl.width, canvasEl.height);\r\n}\r\n\r\nasync function generateAvatar() {\r\n    const generator = new AvatarGenerator(hash);\r\n\r\n    setCanvasBackground(generator);\r\n\r\n    await renderBody(generator);\r\n\r\n    await renderEyes(generator);\r\n\r\n    await renderNosemouth(generator);\r\n\r\n    await renderEars(generator);\r\n}\r\n\r\nasync function app() {\r\n    queryElements();\r\n\r\n    initializeStuff();\r\n\r\n    await loadComponentImages();\r\n\r\n    generateAvatar();\r\n}\r\n\r\nwindow.onload = app;\r\n"],"names":["$562ae4f7b3e8c1a4$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$5ccb2ac027e70296$export$2e2bcd8739ae039","descriptor","call","value","$86a869c06163ddac$export$2e2bcd8739ae039","$b4704688fbc18b94$export$2e2bcd8739ae039","obj","privateCollection","$2aba73354d41b8c0$export$2e2bcd8739ae039","set","$c9bdbb6d9b8824ef$export$2e2bcd8739ae039","writable","$4669f584925db56d$export$2e2bcd8739ae039","$fcea3dee3c1b3a2c$export$2e2bcd8739ae039","privateSet","fn","$8d964da4572a11f0$export$2e2bcd8739ae039","add","$ffa4240a3eaf3ac5$export$2e2bcd8739ae039","key","Object","defineProperty","enumerable","configurable","$173ec5528b4d4249$export$569885e57444f84a","$173ec5528b4d4249$export$4535031a8c1cfd19","body","eye","nosemouth","ear","_hash","WeakMap","_generatedBgColor","_generatedBodyColor","_getColor","WeakSet","_getVariant","_getValueInRangeFloat","_getValueInRangeInt","_getSaltyHash","$a61a8b917135f688$export$ddb6f44b1777fe96","getBackgroundColor","this","getColor","getBodyConfig","color","getValueInRangeFloat","bodyScaleRange","getEyesConfig","variant","getVariant","eyesScaleRange","getValueInRangeInt","eyesDistanceRange","getNosemouthConfig","nousemouthScaleRange","getEarsConfig","earsScaleRange","earsDistanceRange","earsRotation","constructor","hash","salt","excludeColors","colors","filter","c","includes","getSaltyHash","length","componentName","range","min","max","roundingFn","Math","ceil","floor","abs","$8424a3cd36d95c2d$export$adaba664e531641c","inputString","i","char","charCodeAt","$81bb83f403a55568$var$componentContainerEl","$81bb83f403a55568$var$imgRendererEl","$81bb83f403a55568$var$svgEditorEl","$81bb83f403a55568$var$canvasEl","$81bb83f403a55568$var$btnDownloadAvatarEl","$81bb83f403a55568$var$btnRandomInputEl","$81bb83f403a55568$var$aDownloaderEl","$81bb83f403a55568$var$imgAvatarPreviewEl","$81bb83f403a55568$var$inputTextEl","$81bb83f403a55568$var$hashEl","$81bb83f403a55568$var$hash","$81bb83f403a55568$var$canvasCtx","$81bb83f403a55568$var$componentElements","$81bb83f403a55568$var$downloadAvatar","image","toDataURL","href","click","$81bb83f403a55568$var$generateNewHash","newValue","$81bb83f403a55568$var$generateAvatar","$81bb83f403a55568$var$randomizeInput","randomInput","crypto","randomUUID","$81bb83f403a55568$var$handleInputChange","event","ref","ref1","currentTarget","async","$81bb83f403a55568$var$renderEditedSvgToCanvas","x","y","component","children","svgString","XMLSerializer","serializeToString","src","image64","btoa","imgLoadPromise","Promise","resolve","onload","$81bb83f403a55568$var$renderSvgToImage","drawImage","$81bb83f403a55568$var$updatePreview","$81bb83f403a55568$var$initSvgEditor","svgId","innerHTML","svgElement","cloneNode","id","appendChild","$81bb83f403a55568$var$applySvgTransforms","params","scale","rotation","svgEl","document","querySelector","fillableEl","setAttributeNS","groupEl","gTransform","getAttributeNS","clientWidth","clientHeight","newWidth","newHeight","width","height","generator","bgColor","fillStyle","fillRect","$81bb83f403a55568$var$setCanvasBackground","bodyConfig","newBodySize","bodyPositionX","bodyPositionY","$81bb83f403a55568$var$renderBody","eyesConfig","newLeftEyeSize","leftEyePositionX","distance","leftEyePositionY","newRightEyeSize","rightEyePositionX","rightEyePositionY","$81bb83f403a55568$var$renderEyes","nousemouthConfig","newSize","nousemouthX","nousemouthY","$81bb83f403a55568$var$renderNosemouth","earsConfig","newLeftEarSize","leftEarPositionX","leftEarPositionY","newRightEearSize","rightEarPositionX","rightEarPositionY","$81bb83f403a55568$var$renderEars","window","getContext","addEventListener","z","keys","count","imagePath","res","fetch","text","svg","DOMParser","parseFromString","firstChild","$81bb83f403a55568$var$loadComponentImages"],"version":3,"file":"index.5717a90a.js.map"}