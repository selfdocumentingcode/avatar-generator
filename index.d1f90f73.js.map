{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.js","node_modules/@swc/helpers/src/_class_private_field_get.js","node_modules/@swc/helpers/src/_class_apply_descriptor_get.js","node_modules/@swc/helpers/src/_check_private_redeclaration.js","node_modules/@swc/helpers/src/_class_private_field_init.js","node_modules/@swc/helpers/src/_class_private_field_set.js","node_modules/@swc/helpers/src/_class_apply_descriptor_set.js","node_modules/@swc/helpers/src/_class_private_method_get.js","node_modules/@swc/helpers/src/_class_private_method_init.js","node_modules/@swc/helpers/src/_define_property.js","src/config.js","src/utils.js","src/avatarGenerator.js","src/elementContainer.js","src/componentsContainer.js","src/svgFunctions.js","src/renderFunctions.js","src/app.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration\";\n\nexport default function _classPrivateMethodInit(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export const colorPalette = [\r\n    '#11133c',\r\n    '#f9ead4',\r\n    '#030504',\r\n    '#ffffff',\r\n\r\n    '#79fe9d',\r\n    '#f9a86f',\r\n    '#f71e4d',\r\n\r\n    '#060fbf',\r\n    '#1d43c6',\r\n    '#eef5f9',\r\n    '#c3d5e1',\r\n    '#f2f2f2',\r\n\r\n    '#fcf8f3',\r\n];\r\n\r\nexport const componentFiles = {\r\n    body: 1,\r\n    eye: 2,\r\n    nosemouth: 2,\r\n    ear: 2,\r\n};\r\n\r\nexport const publicUrl = process.env.NODE_ENV === 'development' ? '' : '/avatar-generator';\r\nexport const componentDir = 'components';\r\nexport const avatarSize = 256;\r\nexport const defaultInput = '29055dff-42b8-41fc-b017-c8f589a6799e';\r\n","export function getHash(inputString) {\r\n    let hash = 0;\r\n    if (inputString?.length == 0) return hash;\r\n\r\n    inputString = inputString.toLowerCase();\r\n\r\n    for (let i = 0; i < inputString.length; i++) {\r\n        const char = inputString.charCodeAt(i);\r\n        hash = (hash << 5) - hash + char;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n\r\n    return Math.abs(hash);\r\n}\r\n\r\nexport function getInputFromUrl() {\r\n    return window.location.search ? window.location.search.substring(1) : undefined;\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : null;\r\n}\r\n\r\nfunction luminance(r, g, b) {\r\n    var a = [r, g, b].map(function (v) {\r\n        v /= 255;\r\n        return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\r\n    });\r\n    return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\r\n}\r\n\r\nexport function contrast(hex1, hex2) {\r\n    var rgb1 = hexToRgb(hex1);\r\n    var rgb2 = hexToRgb(hex2);\r\n\r\n    var lum1 = luminance(rgb1[0], rgb1[1], rgb1[2]);\r\n    var lum2 = luminance(rgb2[0], rgb2[1], rgb2[2]);\r\n\r\n    var brightest = Math.max(lum1, lum2);\r\n    var darkest = Math.min(lum1, lum2);\r\n\r\n    return (brightest + 0.05) / (darkest + 0.05);\r\n}\r\n","import { colorPalette, componentFiles } from './config';\r\nimport { contrast } from './utils';\r\n\r\nexport class AvatarGenerator {\r\n    #hash;\r\n\r\n    #generatedBgColor;\r\n    #generatedBodyColor;\r\n\r\n    static minColorContrastRatio = 1.2;\r\n\r\n    static bodyScaleRange = [0.9, 1.1];\r\n\r\n    static eyesScaleRange = [0.6, 0.8];\r\n    static eyesDistanceRange = [48, 96];\r\n\r\n    static nousemouthScaleRange = [0.8, 1.2];\r\n\r\n    static earsScaleRange = [0.6, 0.8];\r\n    static earsRotation = [15, 45]; // Left ear\r\n    static earsTranslateDegRange = [225, 250]; // Left ear\r\n\r\n    constructor(hash) {\r\n        this.#hash = hash;\r\n    }\r\n\r\n    getBackgroundColor() {\r\n        this.#generatedBgColor = this.#getColor();\r\n\r\n        return this.#generatedBgColor;\r\n    }\r\n\r\n    getBodyConfig() {\r\n        const salt = 3;\r\n\r\n        const color = this.#getColor(salt, this.#generatedBgColor, ['#030504']);\r\n\r\n        this.#generatedBodyColor = color;\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.bodyScaleRange, salt);\r\n\r\n        const bodyConfig = {\r\n            color,\r\n            scale,\r\n        };\r\n\r\n        return bodyConfig;\r\n    }\r\n\r\n    getEyesConfig() {\r\n        const salt = 5;\r\n\r\n        const color = this.#getColor(salt, this.#generatedBodyColor);\r\n        const variant = this.#getVariant('eye', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.eyesScaleRange, salt);\r\n        const distance = this.#getValueInRangeInt(AvatarGenerator.eyesDistanceRange, salt);\r\n\r\n        const eyesConfig = {\r\n            color,\r\n            scale,\r\n            distance,\r\n            variant,\r\n        };\r\n\r\n        return eyesConfig;\r\n    }\r\n\r\n    getNosemouthConfig() {\r\n        const salt = 7;\r\n\r\n        const color = this.#getColor(salt, this.#generatedBodyColor);\r\n        const variant = this.#getVariant('nosemouth', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.nousemouthScaleRange, salt);\r\n\r\n        const nosemouthConfig = {\r\n            color,\r\n            scale,\r\n            variant,\r\n        };\r\n\r\n        return nosemouthConfig;\r\n    }\r\n\r\n    getEarsConfig() {\r\n        const salt = 11;\r\n\r\n        const color = this.#getColor(salt, this.#generatedBgColor, [this.#generatedBodyColor]);\r\n        const variant = this.#getVariant('ear', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.earsScaleRange, salt);\r\n\r\n        const rotationDeg = this.#getValueInRangeInt(AvatarGenerator.earsRotation, salt);\r\n        const translateDeg = this.#getValueInRangeInt(AvatarGenerator.earsTranslateDegRange, salt);\r\n\r\n        const earsConfig = {\r\n            color,\r\n            scale,\r\n            translateDeg,\r\n            variant,\r\n            rotationDeg,\r\n        };\r\n\r\n        return earsConfig;\r\n    }\r\n\r\n    #getColor(salt = 1, contrastColor = undefined, excludeColors = undefined) {\r\n        let colors = colorPalette;\r\n\r\n        if (contrastColor) {\r\n            colors = colors.filter((c) => contrast(c, contrastColor) > AvatarGenerator.minColorContrastRatio);\r\n\r\n            // colorPalette.forEach((color) => {\r\n            //     console.log(`%c${color}: ${contrast(contrastColor, color)}`, `background-color: ${contrastColor}; color: ${color}`);\r\n            // });\r\n        }\r\n\r\n        if (excludeColors) {\r\n            colors = colors.filter((c) => !excludeColors.includes(c));\r\n        }\r\n\r\n        return colors[this.#getSaltyHash(salt) % colors.length];\r\n    }\r\n\r\n    #getVariant(componentName, salt = 1) {\r\n        const variant = this.#getSaltyHash(salt) % componentFiles[componentName];\r\n\r\n        return variant;\r\n    }\r\n\r\n    #getValueInRangeFloat(range, salt = 1) {\r\n        const min = range[0] * 100;\r\n        const max = range[1] * 100;\r\n\r\n        const value = min + (this.#getSaltyHash(salt) % (max - min));\r\n\r\n        return value / 100;\r\n    }\r\n\r\n    #getValueInRangeInt(range, salt = 1) {\r\n        const min = range[0];\r\n        const max = range[1];\r\n\r\n        const value = min + (this.#getSaltyHash(salt) % (max - min));\r\n\r\n        return value;\r\n    }\r\n\r\n    #getSaltyHash(salt) {\r\n        const saltyHash = Math.abs(Math.round(this.#hash / salt));\r\n\r\n        return saltyHash;\r\n    }\r\n}\r\n","export let stageWrapperEl;\r\nexport let stageSvgEl;\r\nexport let componentContainerEl;\r\nexport let snapshotContainerEl;\r\nexport let btnDownloadAvatarEl;\r\nexport let btnRandomInputEl;\r\nexport let aDownloaderEl;\r\nexport let inputTextEl;\r\nexport let hashEl;\r\nexport let canvasPreviewEl;\r\n\r\nexport function queryElements() {\r\n    stageWrapperEl = document.querySelector('#stageWrapper');\r\n    stageSvgEl = document.querySelector('#stageSvg');\r\n    componentContainerEl = document.querySelector('#componentContainer');\r\n    snapshotContainerEl = document.querySelector('#snapshotContainer');\r\n    btnDownloadAvatarEl = document.querySelector('#btnDownloadAvatar');\r\n    btnRandomInputEl = document.querySelector('#btnRandomInput');\r\n    aDownloaderEl = document.querySelector('#downloader');\r\n    inputTextEl = document.querySelector('#inputText');\r\n    hashEl = document.querySelector('#hash');\r\n    canvasPreviewEl = document.querySelector('#canvasPreview');\r\n}\r\n","import { componentFiles, componentDir, publicUrl } from './config';\r\nimport { componentContainerEl } from './elementContainer';\r\n\r\nexport const componentElements = {};\r\n\r\nexport async function loadComponentImages() {\r\n    for (let i = 0; i < Object.keys(componentFiles).length; i++) {\r\n        var key = Object.keys(componentFiles)[i];\r\n        var count = componentFiles[key];\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            const imagePath = `${publicUrl}/${componentDir}/${key}_${j}.svg`;\r\n\r\n            const res = await fetch(imagePath);\r\n            const text = await res.text();\r\n\r\n            const svg = new DOMParser().parseFromString(text, 'text/xml').firstChild;\r\n\r\n            const svgId = `svg-${key}-${j}`;\r\n            svg.id = svgId;\r\n\r\n            componentContainerEl.appendChild(svg);\r\n\r\n            componentElements[svgId] = svg;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getComponentLayer(name, variant) {\r\n    const component = componentElements[`svg-${name}-${variant}`];\r\n\r\n    if (!component) throw `Can't find component with name svg-${name}-${variant}`;\r\n\r\n    const layer = component.querySelector('g');\r\n    const layerClone = layer.cloneNode(true);\r\n\r\n    layerClone.id = `${name}-layer`;\r\n\r\n    return layerClone;\r\n}\r\n","import { stageSvgEl } from './elementContainer';\r\n\r\nexport function applySvgFlipHorizontal(componentLayer) {\r\n    appendTransform(componentLayer, `scale(-1,1)`);\r\n}\r\n\r\nexport function applySvgTranslation(componentLayer, translation) {\r\n    const { x, y } = translation;\r\n\r\n    appendTransform(componentLayer, `translate(${x} ${y})`);\r\n}\r\n\r\nexport function applySvgRotation(componentLayer, rotationDeg) {\r\n    const fillableEl = componentLayer.querySelector('[fill]');\r\n\r\n    const rect = fillableEl.getBoundingClientRect();\r\n\r\n    const rectCenterX = rect.x + rect.width / 2;\r\n    const rectCenterY = rect.y + rect.height / 2;\r\n\r\n    const relativeCoords = getRelativeCoordinates(rectCenterX, rectCenterY, stageSvgEl, fillableEl);\r\n\r\n    const positionX = relativeCoords.x;\r\n    const positionY = relativeCoords.y;\r\n\r\n    appendTransform(fillableEl, `rotate(${rotationDeg} ${positionX} ${positionY})`);\r\n}\r\n\r\nexport function applySvgTransforms(componentLayer, params) {\r\n    const { color, offsetX, offsetY, flipHorizontal } = params;\r\n    const { scale } = params;\r\n    // const scale = 0.5;\r\n\r\n    const fillableEl = componentLayer.querySelector('[fill]');\r\n\r\n    fillableEl.setAttributeNS(null, 'fill', color);\r\n    fillableEl.setAttributeNS(null, 'stroke', color);\r\n\r\n    componentLayer.setAttributeNS(null, 'transform-origin', 'center');\r\n\r\n    const originalRect = componentLayer.getBoundingClientRect();\r\n\r\n    const originalWidth = originalRect.width;\r\n    const originalHeight = originalRect.height;\r\n\r\n    appendTransform(componentLayer, `scale(${scale})`);\r\n\r\n    const scaledWidth = componentLayer.getBoundingClientRect().width;\r\n    const scaledHeight = componentLayer.getBoundingClientRect().height;\r\n\r\n    const stageSvgWidth = stageSvgEl.getAttributeNS(null, 'width');\r\n    const stageSvgHeight = stageSvgEl.getAttributeNS(null, 'height');\r\n\r\n    let translateToX = 0;\r\n    let translateToY = 0;\r\n\r\n    if (fillableEl.tagName === 'path') {\r\n        translateToX = Math.round(stageSvgWidth / 2 - originalWidth / 2) + (offsetX ?? 0);\r\n        translateToY = Math.round(stageSvgHeight / 2 - originalHeight / 2) + (offsetY ?? 0);\r\n    } else {\r\n        translateToX = Math.round(stageSvgWidth / 2) + (offsetX ?? 0);\r\n        translateToY = Math.round(stageSvgHeight / 2) + (offsetY ?? 0);\r\n    }\r\n\r\n    // if (flipHorizontal) translateToX = -translateToX;\r\n\r\n    appendTransform(componentLayer, `translate(${translateToX}, ${translateToY})`);\r\n\r\n    return {\r\n        width: scaledWidth,\r\n        height: scaledHeight,\r\n    };\r\n}\r\n\r\nexport async function addLayerToStage(componentLayer, x, y) {\r\n    const fillableEl = componentLayer.querySelector('[fill]');\r\n\r\n    const positionalAttributes = ['cx', 'cy', 'x', 'y'];\r\n\r\n    positionalAttributes.forEach((a) => {\r\n        if (fillableEl.hasAttributeNS(null, a)) {\r\n            fillableEl.removeAttributeNS(null, a);\r\n        }\r\n    });\r\n\r\n    stageSvgEl.appendChild(componentLayer);\r\n}\r\n\r\nfunction getRelativeCoordinates(x, y, svgContainer, svgElement) {\r\n    var p = svgContainer.createSVGPoint();\r\n    p.x = x;\r\n    p.y = y;\r\n\r\n    var ctm = svgElement.getScreenCTM();\r\n\r\n    return p.matrixTransform(ctm.inverse());\r\n}\r\n\r\nexport function appendTransform(svgElement, newTransforms) {\r\n    let currentTransform = svgElement.getAttributeNS(null, 'transform') ?? '';\r\n\r\n    if (!Array.isArray(newTransforms)) newTransforms = [newTransforms];\r\n\r\n    const allTransforms = [currentTransform, ...newTransforms].join(' ').trim();\r\n\r\n    svgElement.setAttributeNS(null, 'transform', allTransforms);\r\n}\r\n","import { stageSvgEl, snapshotContainerEl } from './elementContainer';\r\nimport { getComponentLayer } from './componentsContainer';\r\nimport {\r\n    addLayerToStage,\r\n    applySvgTranslation,\r\n    applySvgTransforms,\r\n    addLayerToStage,\r\n    applySvgFlipHorizontal,\r\n    applySvgRotation,\r\n} from './svgFunctions';\r\n\r\nexport function renderBackground(generator) {\r\n    const bgColor = generator.getBackgroundColor();\r\n\r\n    const backgroundRect = stageSvgEl.querySelector('g#background-layer rect');\r\n\r\n    backgroundRect.setAttributeNS(null, 'fill', bgColor);\r\n    backgroundRect.setAttributeNS(null, 'stroke', bgColor);\r\n\r\n    saveSnapshot('background');\r\n}\r\n\r\nexport async function renderBody(generator) {\r\n    const bodyConfig = generator.getBodyConfig();\r\n\r\n    const bodyComponent = getComponentLayer('body', 0);\r\n\r\n    await addLayerToStage(bodyComponent); // Maybe add to temp stage and then move\r\n\r\n    saveSnapshot('body1');\r\n\r\n    const newBodySize = applySvgTransforms(bodyComponent, { color: bodyConfig.color, scale: bodyConfig.scale });\r\n\r\n    saveSnapshot('body2');\r\n\r\n    return newBodySize;\r\n}\r\n\r\nexport async function renderNosemouth(generator) {\r\n    const nosemouthOffsetY = 16;\r\n\r\n    const nousemouthConfig = generator.getNosemouthConfig();\r\n\r\n    const nosemouthComponent = getComponentLayer('nosemouth', nousemouthConfig.variant);\r\n\r\n    await addLayerToStage(nosemouthComponent);\r\n\r\n    saveSnapshot('noseMouth1');\r\n\r\n    const newSize = applySvgTransforms(nosemouthComponent, {\r\n        color: nousemouthConfig.color,\r\n        scale: nousemouthConfig.scale,\r\n        offsetY: nosemouthOffsetY,\r\n    });\r\n\r\n    saveSnapshot('noseMouth2');\r\n\r\n    return newSize;\r\n}\r\n\r\nasync function renderEye(eyesConfig) {\r\n    const eyeComponent = getComponentLayer('eye', eyesConfig.variant);\r\n\r\n    await addLayerToStage(eyeComponent);\r\n\r\n    saveSnapshot('eye1');\r\n\r\n    const eyeOffsetY = -24;\r\n    const eyeOffsetX = Math.round(eyesConfig.distance / 2);\r\n\r\n    const newEyeSize = applySvgTransforms(eyeComponent, {\r\n        color: eyesConfig.color,\r\n        scale: eyesConfig.scale,\r\n        offsetX: eyeOffsetX,\r\n        offsetY: eyeOffsetY,\r\n    });\r\n\r\n    saveSnapshot('eye2');\r\n\r\n    return newEyeSize;\r\n}\r\n\r\nexport async function renderEyes(generator) {\r\n    const eyesConfig = generator.getEyesConfig();\r\n\r\n    // Left eye\r\n    await renderEye(eyesConfig);\r\n\r\n    // Right eye\r\n    const rightEyeConfig = { ...eyesConfig, distance: -eyesConfig.distance };\r\n    await renderEye(rightEyeConfig);\r\n}\r\n\r\n// TODO: get rid of flip param. flip after all transforms instead\r\nasync function renderEar(earsConfig, bodyR, flipHorizontal) {\r\n    const earOffsetY = -24;\r\n\r\n    const earComponent = getComponentLayer('ear', earsConfig.variant);\r\n\r\n    await addLayerToStage(earComponent);\r\n\r\n    saveSnapshot('ear1');\r\n\r\n    if (flipHorizontal) {\r\n        applySvgFlipHorizontal(earComponent);\r\n\r\n        saveSnapshot('ear2');\r\n    }   \r\n\r\n    const newEarSize = applySvgTransforms(earComponent, {\r\n        color: earsConfig.color,\r\n        scale: earsConfig.scale,\r\n        flipHorizontal,\r\n    });\r\n\r\n    saveSnapshot('ear3');\r\n\r\n    const translateDeg = earsConfig.translateDeg;\r\n    const translateRad = (Math.PI / 180) * translateDeg;\r\n\r\n    let translateX = ((bodyR + newEarSize.width / 2) / earsConfig.scale) * Math.cos(translateRad);\r\n    const translateY = ((bodyR + newEarSize.height / 2) / earsConfig.scale + earOffsetY) * Math.sin(translateRad);\r\n\r\n    if (flipHorizontal) translateX = -translateX;\r\n\r\n    applySvgTranslation(earComponent, { x: translateX, y: translateY });\r\n\r\n    saveSnapshot('ear4');\r\n\r\n    const midPointDeg = 270;\r\n    let rotationDeg = earsConfig.translateDeg - midPointDeg;\r\n\r\n    if (flipHorizontal) rotationDeg = -rotationDeg;\r\n\r\n    applySvgRotation(earComponent, rotationDeg);\r\n\r\n    saveSnapshot('ear5');\r\n\r\n    return newEarSize;\r\n}\r\n\r\nexport async function renderEars(generator, bodySize) {\r\n    const earsConfig = generator.getEarsConfig();\r\n\r\n    const bodyR = Math.round(bodySize.width / 2);\r\n\r\n    // Render left ear\r\n    await renderEar(earsConfig, bodyR, false);\r\n\r\n    // Render right ear\r\n    // Mirror translateDeg and rotation\r\n    const midPointDeg = 270;\r\n    const rightEarTranslateDeg = earsConfig.translateDeg + 2 * (midPointDeg - earsConfig.translateDeg);\r\n\r\n    // Not really using right ear rotation. I guess it should be a \"rotation offset\" kinda thing?\r\n    //const rightEarRotation = earsConfig.rotation;\r\n\r\n    const rightEarConfig = { ...earsConfig, translateDeg: rightEarTranslateDeg };\r\n\r\n    await renderEar(rightEarConfig, bodyR, true);\r\n}\r\n\r\nfunction saveSnapshot(caption = '') {\r\n    const snapshotElement = document.createElement('div');\r\n    snapshotElement.classList.add('snapshot');\r\n\r\n    const stageSnapshotEl = stageSvgEl.cloneNode(true);\r\n\r\n    snapshotElement.append(stageSnapshotEl, caption);\r\n\r\n    snapshotContainerEl.prepend(snapshotElement);\r\n}\r\n","import { AvatarGenerator } from './avatarGenerator';\r\nimport { getHash, getInputFromUrl } from './utils';\r\nimport { avatarSize, defaultInput } from './config';\r\nimport {\r\n    queryElements,\r\n    btnDownloadAvatarEl,\r\n    btnRandomInputEl,\r\n    aDownloaderEl,\r\n    inputTextEl,\r\n    hashEl,\r\n    stageSvgEl,\r\n    canvasPreviewEl,\r\n    snapshotContainerEl,\r\n} from './elementContainer';\r\nimport { renderBackground, renderBody, renderEars, renderEyes, renderNosemouth } from './renderFunctions';\r\nimport { loadComponentImages } from './componentsContainer';\r\n\r\nlet hash;\r\n\r\nfunction downloadAvatar() {\r\n    const image = canvasPreviewEl.toDataURL();\r\n\r\n    aDownloaderEl.download = 'avatar';\r\n    aDownloaderEl.href = image;\r\n    aDownloaderEl.click();\r\n    aDownloaderEl.href = null;\r\n}\r\n\r\nfunction generateNewHash(newValue) {\r\n    hash = getHash(newValue);\r\n\r\n    hashEl.value = hash;\r\n\r\n    generateAvatar();\r\n}\r\n\r\nfunction randomizeInput() {\r\n    const randomInput = crypto.randomUUID();\r\n\r\n    inputTextEl.value = randomInput;\r\n\r\n    generateNewHash(randomInput);\r\n}\r\n\r\nfunction handleInputChange(event) {\r\n    const inputValue = event?.currentTarget?.value ?? '';\r\n\r\n    generateNewHash(inputValue);\r\n}\r\n\r\nfunction initializeStuff() {\r\n    queryElements();\r\n\r\n    const inputValue = getInputFromUrl() ?? defaultInput;\r\n\r\n    inputTextEl.value = inputValue;\r\n    hash = getHash(inputTextEl.value);\r\n    hashEl.value = hash;\r\n\r\n    canvasPreviewEl.width = avatarSize;\r\n    canvasPreviewEl.height = avatarSize;\r\n\r\n    btnDownloadAvatarEl.addEventListener('click', downloadAvatar);\r\n    btnRandomInputEl.addEventListener('click', randomizeInput);\r\n    inputTextEl.addEventListener('change', handleInputChange);\r\n}\r\n\r\nasync function updatePreview() {\r\n    const tempImage = new Image();\r\n\r\n    const onLoadCallback = (resolve) =>\r\n        (tempImage.onload = () => {\r\n            const ctx = canvasPreviewEl.getContext('2d');\r\n\r\n            ctx.drawImage(tempImage, 0, 0, avatarSize, avatarSize);\r\n\r\n            tempImage.onload = null;\r\n\r\n            resolve();\r\n        });\r\n        \r\n    const updatePreviewPromise = new Promise((resolve) => onLoadCallback(resolve));\r\n\r\n    const svgString = new XMLSerializer().serializeToString(stageSvgEl);\r\n\r\n    const svg64 = window.btoa(svgString);\r\n    const b64Start = 'data:image/svg+xml;base64,';\r\n    const image64 = b64Start + svg64;\r\n\r\n    tempImage.src = image64;\r\n\r\n    return updatePreviewPromise;\r\n}\r\n\r\nasync function generateAvatar() {\r\n    clearStage();\r\n\r\n    const generator = new AvatarGenerator(hash);\r\n\r\n    renderBackground(generator);\r\n\r\n    const bodySize = await renderBody(generator);\r\n\r\n    await renderEyes(generator);\r\n\r\n    await renderNosemouth(generator);\r\n\r\n    await renderEars(generator, bodySize);\r\n\r\n    updatePreview();\r\n}\r\n\r\nasync function app() {\r\n    initializeStuff();\r\n\r\n    await loadComponentImages();\r\n\r\n    generateAvatar();\r\n}\r\n\r\nfunction clearStage() {\r\n    Array.from(stageSvgEl.children)\r\n        .filter((c) => c.id !== 'background-layer')\r\n        .forEach((c) => c.remove());\r\n\r\n    Array.from(snapshotContainerEl.children)\r\n        .forEach((c) => c.remove());\r\n}\r\n\r\nwindow.onload = app;\r\n"],"names":["$562ae4f7b3e8c1a4$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$5ccb2ac027e70296$export$2e2bcd8739ae039","descriptor","call","value","$86a869c06163ddac$export$2e2bcd8739ae039","$b4704688fbc18b94$export$2e2bcd8739ae039","obj","privateCollection","$2aba73354d41b8c0$export$2e2bcd8739ae039","set","$c9bdbb6d9b8824ef$export$2e2bcd8739ae039","writable","$4669f584925db56d$export$2e2bcd8739ae039","$fcea3dee3c1b3a2c$export$2e2bcd8739ae039","privateSet","fn","$8d964da4572a11f0$export$2e2bcd8739ae039","add","$ffa4240a3eaf3ac5$export$2e2bcd8739ae039","key","Object","defineProperty","enumerable","configurable","$173ec5528b4d4249$export$569885e57444f84a","$173ec5528b4d4249$export$4535031a8c1cfd19","body","eye","nosemouth","ear","$8424a3cd36d95c2d$export$adaba664e531641c","inputString","hash","length","toLowerCase","i","charCodeAt","Math","abs","$8424a3cd36d95c2d$var$hexToRgb","hex","result","exec","parseInt","$8424a3cd36d95c2d$var$luminance","r","g","b","a","map","v","pow","_hash","WeakMap","_generatedBgColor","_generatedBodyColor","_getColor","WeakSet","_getVariant","_getValueInRangeFloat","_getValueInRangeInt","_getSaltyHash","$a61a8b917135f688$export$ddb6f44b1777fe96","getBackgroundColor","this","getColor","getBodyConfig","color","getValueInRangeFloat","bodyScaleRange","getEyesConfig","variant","getVariant","eyesScaleRange","getValueInRangeInt","eyesDistanceRange","getNosemouthConfig","nousemouthScaleRange","getEarsConfig","scale","earsScaleRange","rotationDeg","earsRotation","earsTranslateDegRange","constructor","salt","contrastColor","excludeColors","colors","filter","c","$8424a3cd36d95c2d$export$1ec78ac20028ebd4","hex2","rgb1","rgb2","lum1","lum2","max","min","minColorContrastRatio","includes","getSaltyHash","componentName","range","round","$900021057a9c5c66$export$266920c2c409de8d","$900021057a9c5c66$export$9b52f68a8b84a583","$900021057a9c5c66$export$1fa2813b054604ff","$900021057a9c5c66$export$cb632652e9a39412","$900021057a9c5c66$export$66e63a8cec585d34","$900021057a9c5c66$export$bec7512c1cd9ffb9","$900021057a9c5c66$export$d8383143ef1f73e4","$900021057a9c5c66$export$fd78483c71060514","$900021057a9c5c66$export$d2d2c1361382c583","$900021057a9c5c66$export$5ac92b74daa186bd","$4e6879712c6ea666$export$c68ef4bc6f3ae3cb","$4e6879712c6ea666$export$a63c59ebbb99ea1b","name","component","layerClone","querySelector","cloneNode","id","$9ff69a8718fd5808$export$e03a1472f511fa94","componentLayer","params","offsetX","offsetY","flipHorizontal","fillableEl","setAttributeNS","originalRect","getBoundingClientRect","originalWidth","width","originalHeight","height","$9ff69a8718fd5808$export$b0bb7f25b3e4eaa4","scaledWidth","scaledHeight","stageSvgWidth","getAttributeNS","stageSvgHeight","translateToX","translateToY","tagName","async","$9ff69a8718fd5808$export$ca195b73f96f6f7a","x","y","forEach","hasAttributeNS","removeAttributeNS","appendChild","svgElement","newTransforms","ref","currentTransform","Array","isArray","allTransforms","join","trim","$641fda3426fb5165$var$renderEye","eyesConfig","eyeComponent","$641fda3426fb5165$var$saveSnapshot","eyeOffsetX","distance","newEyeSize","$641fda3426fb5165$var$renderEar","earsConfig","bodyR","earComponent","newEarSize","translateDeg","translateRad","PI","translateX","cos","translation","$9ff69a8718fd5808$export$2d704b475441bd7a","sin","rect","relativeCoords","svgContainer","p","createSVGPoint","ctm","getScreenCTM","matrixTransform","inverse","$9ff69a8718fd5808$var$getRelativeCoordinates","$9ff69a8718fd5808$export$9bc896b4a6b6653f","caption","snapshotElement","document","createElement","classList","stageSnapshotEl","append","prepend","$81bb83f403a55568$var$hash","$81bb83f403a55568$var$downloadAvatar","image","toDataURL","download","href","click","$81bb83f403a55568$var$generateNewHash","newValue","$81bb83f403a55568$var$generateAvatar","$81bb83f403a55568$var$randomizeInput","randomInput","crypto","randomUUID","$81bb83f403a55568$var$handleInputChange","event","ref1","currentTarget","$81bb83f403a55568$var$initializeStuff","inputValue","window","location","search","substring","undefined","addEventListener","$81bb83f403a55568$var$updatePreview","tempImage","Image","updatePreviewPromise","Promise","resolve","onload","getContext","drawImage","onLoadCallback","svgString","XMLSerializer","serializeToString","image64","btoa","src","from","children","remove","generator","bgColor","backgroundRect","$641fda3426fb5165$export$f0ec5a3035faac50","bodySize","bodyConfig","bodyComponent","newBodySize","$641fda3426fb5165$export$7be1a616c61d91f2","rightEyeConfig","$641fda3426fb5165$export$8e0c999448638e7","nousemouthConfig","nosemouthComponent","newSize","$641fda3426fb5165$export$f7e6d04dfdeb0c42","rightEarTranslateDeg","rightEarConfig","$641fda3426fb5165$export$38b746c6ebe77431","keys","count","j","imagePath","res","fetch","text","svg","DOMParser","parseFromString","firstChild","svgId","$4e6879712c6ea666$export$a1d689bff0100661"],"version":3,"file":"index.d1f90f73.js.map"}