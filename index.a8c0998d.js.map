{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.js","node_modules/@swc/helpers/src/_class_private_field_get.js","node_modules/@swc/helpers/src/_class_apply_descriptor_get.js","node_modules/@swc/helpers/src/_check_private_redeclaration.js","node_modules/@swc/helpers/src/_class_private_field_init.js","node_modules/@swc/helpers/src/_class_private_field_set.js","node_modules/@swc/helpers/src/_class_apply_descriptor_set.js","node_modules/@swc/helpers/src/_class_private_method_get.js","node_modules/@swc/helpers/src/_class_private_method_init.js","node_modules/@swc/helpers/src/_define_property.js","src/config.js","src/avatarGenerator.js","src/utils.js","src/elementContainer.js","src/componentsContainer.js","src/renderFunctions.js","src/app.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration\";\n\nexport default function _classPrivateMethodInit(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export const colorPalette = [\r\n    '#11133c',\r\n    '#f9ead4',\r\n    '#030504',\r\n    '#ffffff',\r\n\r\n    '#79fe9d',\r\n    '#f9a86f',\r\n    '#f71e4d',\r\n\r\n    '#060fbf',\r\n    '#1d43c6',\r\n    '#eef5f9',\r\n    '#c3d5e1',\r\n    '#f2f2f2',\r\n\r\n    '#fcf8f3',\r\n];\r\n\r\nexport const componentFiles = {\r\n    body: 1,\r\n    eye: 2,\r\n    nosemouth: 2,\r\n    ear: 2,\r\n};\r\n\r\nexport const publicUrl = process.env.NODE_ENV === 'development' ? '' : '/avatar-generator';\r\nexport const componentDir = 'components';\r\nexport const avatarSize = 256;\r\nexport const defaultInput = '6b63bc2e-2984-4da2-b7a9-b9fe671ce986';\r\n","import { colorPalette, componentFiles } from './config';\r\n\r\nexport class AvatarGenerator {\r\n    #hash;\r\n\r\n    #generatedBgColor;\r\n    #generatedBodyColor;\r\n\r\n    static bodyScaleRange = [0.9, 1.1];\r\n\r\n    static eyesScaleRange = [0.6, 0.8];\r\n    static eyesDistanceRange = [48, 96];\r\n\r\n    static nousemouthScaleRange = [0.8, 1.2];\r\n\r\n    static earsScaleRange = [0.6, 0.8];\r\n    static earsRotation = [15, 45];\r\n    static earsTranslateDegRange = [225, 250]; // Left ear\r\n\r\n    constructor(hash) {\r\n        this.#hash = hash;\r\n    }\r\n\r\n    getBackgroundColor() {\r\n        this.#generatedBgColor = this.#getColor();\r\n\r\n        return this.#generatedBgColor;\r\n    }\r\n\r\n    getBodyConfig() {\r\n        const salt = 3;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBgColor, '#030504']);\r\n\r\n        this.#generatedBodyColor = color;\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.bodyScaleRange, salt);\r\n\r\n        const bodyConfig = {\r\n            color,\r\n            scale,\r\n        };\r\n\r\n        return bodyConfig;\r\n    }\r\n\r\n    getEyesConfig() {\r\n        const salt = 5;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor]);\r\n        const variant = this.#getVariant('eye', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.eyesScaleRange, salt);\r\n        const distance = this.#getValueInRangeInt(AvatarGenerator.eyesDistanceRange, salt);\r\n\r\n        const eyesConfig = {\r\n            color,\r\n            scale,\r\n            distance,\r\n            variant,\r\n        };\r\n\r\n        return eyesConfig;\r\n    }\r\n\r\n    getNosemouthConfig() {\r\n        const salt = 7;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor]);\r\n        const variant = this.#getVariant('nosemouth', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.nousemouthScaleRange, salt);\r\n\r\n        const nosemouthConfig = {\r\n            color,\r\n            scale,\r\n            variant,\r\n        };\r\n\r\n        return nosemouthConfig;\r\n    }\r\n\r\n    getEarsConfig() {\r\n        const salt = 11;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor, this.#generatedBgColor]);\r\n        const variant = this.#getVariant('ear', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.earsScaleRange, salt);\r\n\r\n        const rotation = this.#getValueInRangeInt(AvatarGenerator.earsRotation, salt);\r\n        const translateDeg = this.#getValueInRangeInt(AvatarGenerator.earsTranslateDegRange, salt);\r\n\r\n        const earsConfig = {\r\n            color,\r\n            scale,\r\n            translateDeg,\r\n            variant,\r\n            rotation,\r\n        };\r\n\r\n        return earsConfig;\r\n    }\r\n\r\n    #getColor(salt = 1, excludeColors = undefined) {\r\n        const colors = excludeColors ? colorPalette.filter((c) => !excludeColors.includes(c)) : colorPalette;\r\n\r\n        return colors[this.#getSaltyHash(salt) % colors.length];\r\n    }\r\n\r\n    #getVariant(componentName, salt = 1) {\r\n        const variant = this.#getSaltyHash(salt) % componentFiles[componentName];\r\n\r\n        return variant;\r\n    }\r\n\r\n    #getValueInRangeFloat(range, salt = 1) {\r\n        const min = range[0] * 100;\r\n        const max = range[1] * 100;\r\n\r\n        const value = min + (this.#getSaltyHash(salt) % (max - min));\r\n\r\n        return value / 100;\r\n    }\r\n\r\n    #getValueInRangeInt(range, salt = 1) {\r\n        const min = range[0];\r\n        const max = range[1];\r\n\r\n        const value = min + (this.#getSaltyHash(salt) % (max - min));\r\n\r\n        return value;\r\n    }\r\n\r\n    #getSaltyHash(salt) {\r\n        const saltyHash = Math.abs(Math.round(this.#hash / salt));\r\n\r\n        return saltyHash;\r\n    }\r\n}\r\n","export function getHash(inputString) {\r\n    let hash = 0;\r\n    if (inputString?.length == 0) return hash;\r\n\r\n    inputString = inputString.toLowerCase();\r\n\r\n    for (let i = 0; i < inputString.length; i++) {\r\n        const char = inputString.charCodeAt(i);\r\n        hash = (hash << 5) - hash + char;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n\r\n    return Math.abs(hash);\r\n}\r\n\r\nexport function getInputFromUrl() {\r\n    return window.location.search ? window.location.search.substring(1) : undefined;\r\n}","export let stageWrapperEl;\r\nexport let stageSvgEl;\r\nexport let componentContainerEl;\r\nexport let btnDownloadAvatarEl;\r\nexport let btnRandomInputEl;\r\nexport let aDownloaderEl;\r\nexport let inputTextEl;\r\nexport let hashEl;\r\nexport let canvasPreviewEl;\r\n\r\nexport function queryElements() {\r\n    stageWrapperEl = document.querySelector('#stageWrapper');\r\n    stageSvgEl = document.querySelector('#stageSvg');\r\n    componentContainerEl = document.querySelector('#componentContainer');\r\n    btnDownloadAvatarEl = document.querySelector('#btnDownloadAvatar');\r\n    btnRandomInputEl = document.querySelector('#btnRandomInput');\r\n    aDownloaderEl = document.querySelector('#downloader');\r\n    inputTextEl = document.querySelector('#inputText');\r\n    hashEl = document.querySelector('#hash');\r\n    canvasPreviewEl = document.querySelector('#canvasPreview');\r\n}\r\n","import { componentFiles, componentDir, publicUrl } from './config';\r\nimport { componentContainerEl } from './elementContainer';\r\n\r\nexport const componentElements = {};\r\n\r\nexport async function loadComponentImages() {\r\n    for (let i = 0; i < Object.keys(componentFiles).length; i++) {\r\n        var key = Object.keys(componentFiles)[i];\r\n        var count = componentFiles[key];\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            const imagePath = `${publicUrl}/${componentDir}/${key}_${j}.svg`;\r\n\r\n            const res = await fetch(imagePath);\r\n            const text = await res.text();\r\n\r\n            const svg = new DOMParser().parseFromString(text, 'text/xml').firstChild;\r\n\r\n            const svgId = `svg-${key}-${j}`;\r\n            svg.id = svgId;\r\n\r\n            componentContainerEl.appendChild(svg);\r\n\r\n            componentElements[svgId] = svg;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getComponentLayer(name, variant) {\r\n    const component = componentElements[`svg-${name}-${variant}`];\r\n\r\n    if (!component) throw `Can't find component with name svg-${name}-${variant}`;\r\n\r\n    const layer = component.querySelector('g');\r\n    const layerClone = layer.cloneNode(true);\r\n\r\n    layerClone.id = `${name}-layer`;\r\n\r\n    return layerClone;\r\n}\r\n","import { stageSvgEl } from './elementContainer';\r\nimport { getComponentLayer } from './componentsContainer';\r\n\r\nexport function renderBackground(generator) {\r\n    const bgColor = generator.getBackgroundColor();\r\n\r\n    const backgroundRect = stageSvgEl.querySelector('g#background-layer rect');\r\n\r\n    backgroundRect.setAttributeNS(null, 'fill', bgColor);\r\n    backgroundRect.setAttributeNS(null, 'stroke', bgColor);\r\n}\r\n\r\nexport async function renderBody(generator) {\r\n    const bodyConfig = generator.getBodyConfig();\r\n\r\n    const bodyComponent = getComponentLayer('body', 0);\r\n\r\n    await addLayerToStage(bodyComponent); // Maybe add to temp stage and then move\r\n\r\n    const newBodySize = applySvgTransforms(bodyComponent, { color: bodyConfig.color, scale: bodyConfig.scale });\r\n\r\n    return newBodySize;\r\n}\r\n\r\nexport async function renderNosemouth(generator) {\r\n    const nosemouthOffsetY = 16;\r\n\r\n    const nousemouthConfig = generator.getNosemouthConfig();\r\n\r\n    const nosemouthComponent = getComponentLayer('nosemouth', nousemouthConfig.variant);\r\n\r\n    await addLayerToStage(nosemouthComponent);\r\n\r\n    const newSize = applySvgTransforms(nosemouthComponent, {\r\n        color: nousemouthConfig.color,\r\n        scale: nousemouthConfig.scale,\r\n        offsetY: nosemouthOffsetY,\r\n    });\r\n\r\n    return newSize;\r\n}\r\n\r\nasync function renderEye(eyesConfig) {\r\n    const eyeComponent = getComponentLayer('eye', eyesConfig.variant);\r\n\r\n    await addLayerToStage(eyeComponent);\r\n\r\n    const eyeOffsetY = -24;\r\n    const eyeOffsetX = Math.round(eyesConfig.distance / 2);\r\n\r\n    const newEyeSize = applySvgTransforms(eyeComponent, {\r\n        color: eyesConfig.color,\r\n        scale: eyesConfig.scale,\r\n        offsetX: eyeOffsetX,\r\n        offsetY: eyeOffsetY,\r\n    });\r\n\r\n    return newEyeSize;\r\n}\r\n\r\nexport async function renderEyes(generator) {\r\n    const eyesConfig = generator.getEyesConfig();\r\n\r\n    // Left eye\r\n    await renderEye(eyesConfig);\r\n\r\n    // Right eye\r\n    const rightEyeConfig = { ...eyesConfig, distance: -eyesConfig.distance };\r\n    await renderEye(rightEyeConfig);\r\n}\r\n\r\nasync function renderEar(earsConfig, bodyR) {\r\n    const earComponent = getComponentLayer('ear', earsConfig.variant);\r\n\r\n    await addLayerToStage(earComponent);\r\n\r\n    const newEarSize = applySvgTransforms(earComponent, {\r\n        color: earsConfig.color,\r\n        scale: earsConfig.scale,\r\n    });\r\n\r\n    const translateDeg = earsConfig.translateDeg;\r\n    const translateRad = (Math.PI / 180) * translateDeg;\r\n\r\n    // const translateX = (bodyR + newEarSize.width / 2 ) * Math.cos(translateRad);\r\n    // const translateY = (bodyR + newEarSize.height / 2) * Math.sin(translateRad);\r\n\r\n    const translateX = ((bodyR + newEarSize.width / 2) / earsConfig.scale) * Math.cos(translateRad);\r\n    const translateY = ((bodyR + newEarSize.height / 2) / earsConfig.scale) * Math.sin(translateRad);\r\n\r\n    applySvgTranslation(earComponent, { x: translateX, y: translateY });\r\n\r\n    const midPointDeg = 270;\r\n    const rotationDeg = earsConfig.translateDeg - midPointDeg;\r\n\r\n    applySvgRotation(earComponent, rotationDeg);\r\n\r\n    return newEarSize;\r\n}\r\n\r\nexport async function renderEars(generator, bodySize) {\r\n    const earsConfig = generator.getEarsConfig();\r\n\r\n    const bodyR = Math.round(bodySize.width / 2);\r\n\r\n    // Render left ear\r\n    await renderEar(earsConfig, bodyR);\r\n\r\n    // Render right ear\r\n    // Mirror translateDeg and rotation\r\n    const midPointDeg = 270;\r\n    const rightEarTranslateDeg = earsConfig.translateDeg + 2 * (midPointDeg - earsConfig.translateDeg);\r\n    const rightEarRotation = -earsConfig.rotation;\r\n\r\n    const rightEarConfig = { ...earsConfig, translateDeg: rightEarTranslateDeg, rotation: rightEarRotation };\r\n\r\n    await renderEar(rightEarConfig, bodyR);\r\n}\r\n\r\nfunction applySvgTranslation(componentLayer, translation) {\r\n    const { x, y } = translation;\r\n\r\n    let transform = componentLayer.getAttributeNS(null, 'transform') ?? '';\r\n\r\n    transform += ` translate(${x} ${y})`;\r\n\r\n    componentLayer.setAttributeNS(null, 'transform', transform.trim());\r\n}\r\n\r\nfunction applySvgRotation(componentLayer, rotationDeg) {\r\n    const fillableEl = componentLayer.querySelector('[fill]');\r\n\r\n    let transform = fillableEl.getAttributeNS(null, 'transform') ?? '';\r\n\r\n    // fillableEl.setAttributeNS(null, 'transform-origin', 'center');\r\n\r\n    const rect = fillableEl.getBoundingClientRect();\r\n\r\n    const rectCenterX = rect.x + rect.width / 2;\r\n    const rectCenterY = rect.y + rect.height / 2;\r\n\r\n    const relativeCoords = getRelativeCoordinates(rectCenterX, rectCenterY, stageSvgEl, fillableEl);\r\n\r\n    const positionX = relativeCoords.x;\r\n    const positionY = relativeCoords.y;\r\n\r\n    transform += ` rotate(${rotationDeg} ${positionX} ${positionY})`;\r\n\r\n    fillableEl.setAttributeNS(null, 'transform', transform.trim());\r\n}\r\n\r\nfunction applySvgTransforms(componentLayer, params) {\r\n    const { color, offsetX, offsetY } = params;\r\n    const { scale } = params;\r\n    // const scale = 0.5;\r\n\r\n    const fillableEl = componentLayer.querySelector('[fill]');\r\n\r\n    fillableEl.setAttributeNS(null, 'fill', color);\r\n    fillableEl.setAttributeNS(null, 'stroke', color);\r\n\r\n    componentLayer.setAttributeNS(null, 'transform-origin', 'center');\r\n\r\n    const originalRect = componentLayer.getBoundingClientRect();\r\n\r\n    let transform = componentLayer.getAttributeNS(null, 'transform') ?? '';\r\n\r\n    transform += ` scale(${scale})`;\r\n\r\n    const originalWidth = originalRect.width;\r\n    const originalHeight = originalRect.height;\r\n\r\n    componentLayer.setAttributeNS(null, 'transform', transform);\r\n\r\n    const scaledWidth = componentLayer.getBoundingClientRect().width;\r\n    const scaledHeight = componentLayer.getBoundingClientRect().height;\r\n\r\n    const stageSvgWidth = stageSvgEl.getAttributeNS(null, 'width');\r\n    const stageSvgHeight = stageSvgEl.getAttributeNS(null, 'height');\r\n\r\n    let translateToX = 0;\r\n    let translateToY = 0;\r\n\r\n    if (fillableEl.tagName === 'path') {\r\n        translateToX = Math.round(stageSvgWidth / 2 - originalWidth / 2) + (offsetX ?? 0);\r\n        translateToY = Math.round(stageSvgHeight / 2 - originalHeight / 2) + (offsetY ?? 0);\r\n    } else {\r\n        translateToX = Math.round(stageSvgWidth / 2) + (offsetX ?? 0);\r\n        translateToY = Math.round(stageSvgHeight / 2) + (offsetY ?? 0);\r\n    }\r\n\r\n    transform += ` translate(${translateToX} ${translateToY})`;\r\n\r\n    componentLayer.setAttributeNS(null, 'transform', transform.trim());\r\n\r\n    return {\r\n        width: scaledWidth,\r\n        height: scaledHeight,\r\n    };\r\n}\r\n\r\nasync function addLayerToStage(componentLayer, x, y) {\r\n    const fillableEl = componentLayer.querySelector('[fill]');\r\n\r\n    const positionalAttributes = ['cx', 'cy', 'x', 'y'];\r\n\r\n    positionalAttributes.forEach((a) => {\r\n        if (fillableEl.hasAttributeNS(null, a)) {\r\n            fillableEl.removeAttributeNS(null, a);\r\n        }\r\n    });\r\n\r\n    stageSvgEl.appendChild(componentLayer);\r\n}\r\n\r\nexport function clearStage() {\r\n    Array.from(stageSvgEl.children)\r\n        .filter((c) => c.id !== 'background-layer')\r\n        .forEach((c) => c.remove());\r\n}\r\n\r\nfunction getRelativeCoordinates(x, y, svgContainer, svgElement) {\r\n    var p = svgContainer.createSVGPoint();\r\n    p.x = x;\r\n    p.y = y;\r\n\r\n    var ctm = svgElement.getScreenCTM();\r\n\r\n    return p.matrixTransform(ctm.inverse());\r\n}\r\n","import { AvatarGenerator } from './avatarGenerator';\r\nimport { getHash, getInputFromUrl } from './utils';\r\nimport { avatarSize, defaultInput } from './config';\r\nimport {\r\n    queryElements,\r\n    btnDownloadAvatarEl,\r\n    btnRandomInputEl,\r\n    aDownloaderEl,\r\n    inputTextEl,\r\n    hashEl,\r\n    stageSvgEl,\r\n    canvasPreviewEl,\r\n} from './elementContainer';\r\nimport { clearStage, renderBackground, renderBody, renderEars, renderEyes, renderNosemouth } from './renderFunctions';\r\nimport { loadComponentImages } from './componentsContainer';\r\n\r\nlet hash;\r\n\r\nfunction downloadAvatar() {\r\n    const image = canvasPreviewEl.toDataURL();\r\n\r\n    aDownloaderEl.download = 'avatar';\r\n    aDownloaderEl.href = image;\r\n    aDownloaderEl.click();\r\n    aDownloaderEl.href = null;\r\n}\r\n\r\nfunction generateNewHash(newValue) {\r\n    hash = getHash(newValue);\r\n\r\n    hashEl.value = hash;\r\n\r\n    generateAvatar();\r\n}\r\n\r\nfunction randomizeInput() {\r\n    const randomInput = crypto.randomUUID();\r\n\r\n    inputTextEl.value = randomInput;\r\n\r\n    generateNewHash(randomInput);\r\n}\r\n\r\nfunction handleInputChange(event) {\r\n    const inputValue = event?.currentTarget?.value ?? '';\r\n\r\n    generateNewHash(inputValue);\r\n}\r\n\r\nfunction initializeStuff() {\r\n    queryElements();\r\n\r\n    const inputValue = getInputFromUrl() ?? defaultInput;\r\n\r\n    inputTextEl.value = inputValue;\r\n    hash = getHash(inputTextEl.value);\r\n    hashEl.value = hash;\r\n\r\n    canvasPreviewEl.width = avatarSize;\r\n    canvasPreviewEl.height = avatarSize;\r\n\r\n    btnDownloadAvatarEl.addEventListener('click', downloadAvatar);\r\n    btnRandomInputEl.addEventListener('click', randomizeInput);\r\n    inputTextEl.addEventListener('change', handleInputChange);\r\n}\r\n\r\nasync function updatePreview() {\r\n    const tempImage = new Image();\r\n\r\n    const onLoadCallback = (resolve) =>\r\n        (tempImage.onload = () => {\r\n            const ctx = canvasPreviewEl.getContext('2d');\r\n\r\n            ctx.drawImage(tempImage, 0, 0, avatarSize, avatarSize);\r\n\r\n            tempImage.onload = null;\r\n\r\n            resolve();\r\n        });\r\n        \r\n    const updatePreviewPromise = new Promise((resolve) => onLoadCallback(resolve));\r\n\r\n    const svgString = new XMLSerializer().serializeToString(stageSvgEl);\r\n\r\n    const svg64 = window.btoa(svgString);\r\n    const b64Start = 'data:image/svg+xml;base64,';\r\n    const image64 = b64Start + svg64;\r\n\r\n    tempImage.src = image64;\r\n\r\n    return updatePreviewPromise;\r\n}\r\n\r\nasync function generateAvatar() {\r\n    clearStage();\r\n\r\n    const generator = new AvatarGenerator(hash);\r\n\r\n    renderBackground(generator);\r\n\r\n    const bodySize = await renderBody(generator);\r\n\r\n    await renderEyes(generator);\r\n\r\n    await renderNosemouth(generator);\r\n\r\n    await renderEars(generator, bodySize);\r\n\r\n    updatePreview();\r\n}\r\n\r\nasync function app() {\r\n    initializeStuff();\r\n\r\n    await loadComponentImages();\r\n\r\n    generateAvatar();\r\n}\r\n\r\nwindow.onload = app;\r\n"],"names":["$562ae4f7b3e8c1a4$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$5ccb2ac027e70296$export$2e2bcd8739ae039","descriptor","call","value","$86a869c06163ddac$export$2e2bcd8739ae039","$b4704688fbc18b94$export$2e2bcd8739ae039","obj","privateCollection","$2aba73354d41b8c0$export$2e2bcd8739ae039","set","$c9bdbb6d9b8824ef$export$2e2bcd8739ae039","writable","$4669f584925db56d$export$2e2bcd8739ae039","$fcea3dee3c1b3a2c$export$2e2bcd8739ae039","privateSet","fn","$8d964da4572a11f0$export$2e2bcd8739ae039","add","$ffa4240a3eaf3ac5$export$2e2bcd8739ae039","key","Object","defineProperty","enumerable","configurable","$173ec5528b4d4249$export$569885e57444f84a","$173ec5528b4d4249$export$4535031a8c1cfd19","body","eye","nosemouth","ear","_hash","WeakMap","_generatedBgColor","_generatedBodyColor","_getColor","WeakSet","_getVariant","_getValueInRangeFloat","_getValueInRangeInt","_getSaltyHash","$a61a8b917135f688$export$ddb6f44b1777fe96","getBackgroundColor","this","getColor","getBodyConfig","color","getValueInRangeFloat","bodyScaleRange","getEyesConfig","variant","getVariant","eyesScaleRange","getValueInRangeInt","eyesDistanceRange","getNosemouthConfig","nousemouthScaleRange","getEarsConfig","scale","earsScaleRange","rotation","earsRotation","earsTranslateDegRange","constructor","hash","salt","excludeColors","colors","filter","c","includes","getSaltyHash","length","componentName","range","min","max","Math","abs","round","$8424a3cd36d95c2d$export$adaba664e531641c","inputString","toLowerCase","i","charCodeAt","$900021057a9c5c66$export$266920c2c409de8d","$900021057a9c5c66$export$9b52f68a8b84a583","$900021057a9c5c66$export$1fa2813b054604ff","$900021057a9c5c66$export$66e63a8cec585d34","$900021057a9c5c66$export$bec7512c1cd9ffb9","$900021057a9c5c66$export$d8383143ef1f73e4","$900021057a9c5c66$export$fd78483c71060514","$900021057a9c5c66$export$d2d2c1361382c583","$900021057a9c5c66$export$5ac92b74daa186bd","$4e6879712c6ea666$export$c68ef4bc6f3ae3cb","$4e6879712c6ea666$export$a63c59ebbb99ea1b","name","component","layerClone","querySelector","cloneNode","id","async","$641fda3426fb5165$var$renderEye","eyesConfig","eyeComponent","$641fda3426fb5165$var$addLayerToStage","eyeOffsetX","distance","$641fda3426fb5165$var$applySvgTransforms","offsetX","offsetY","$641fda3426fb5165$var$renderEar","earsConfig","bodyR","earComponent","newEarSize","translateDeg","translateRad","PI","componentLayer","translation","x","y","ref","transform","getAttributeNS","setAttributeNS","trim","$641fda3426fb5165$var$applySvgTranslation","width","cos","height","sin","rotationDeg","fillableEl","rect","getBoundingClientRect","rectCenterX","rectCenterY","relativeCoords","svgContainer","svgElement","p","createSVGPoint","ctm","getScreenCTM","matrixTransform","inverse","$641fda3426fb5165$var$getRelativeCoordinates","positionX","positionY","$641fda3426fb5165$var$applySvgRotation","params","originalRect","originalWidth","originalHeight","scaledWidth","scaledHeight","stageSvgWidth","stageSvgHeight","translateToX","translateToY","tagName","forEach","a","hasAttributeNS","removeAttributeNS","appendChild","$81bb83f403a55568$var$hash","$81bb83f403a55568$var$downloadAvatar","image","toDataURL","download","href","click","$81bb83f403a55568$var$generateNewHash","newValue","$81bb83f403a55568$var$generateAvatar","$81bb83f403a55568$var$randomizeInput","randomInput","crypto","randomUUID","$81bb83f403a55568$var$handleInputChange","event","ref1","currentTarget","$81bb83f403a55568$var$initializeStuff","document","inputValue","window","location","search","substring","undefined","addEventListener","$81bb83f403a55568$var$updatePreview","tempImage","Image","updatePreviewPromise","Promise","resolve","onload","getContext","drawImage","onLoadCallback","svgString","XMLSerializer","serializeToString","image64","btoa","src","Array","from","children","remove","generator","bgColor","backgroundRect","$641fda3426fb5165$export$f0ec5a3035faac50","bodySize","bodyConfig","bodyComponent","$641fda3426fb5165$export$7be1a616c61d91f2","rightEyeConfig","$641fda3426fb5165$export$8e0c999448638e7","nousemouthConfig","nosemouthComponent","$641fda3426fb5165$export$f7e6d04dfdeb0c42","rightEarTranslateDeg","rightEarRotation","rightEarConfig","$641fda3426fb5165$export$38b746c6ebe77431","keys","count","j","imagePath","res","fetch","text","svg","DOMParser","parseFromString","firstChild","svgId","$4e6879712c6ea666$export$a1d689bff0100661"],"version":3,"file":"index.a8c0998d.js.map"}