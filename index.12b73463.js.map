{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.js","node_modules/@swc/helpers/src/_class_private_field_get.js","node_modules/@swc/helpers/src/_class_apply_descriptor_get.js","node_modules/@swc/helpers/src/_check_private_redeclaration.js","node_modules/@swc/helpers/src/_class_private_field_init.js","node_modules/@swc/helpers/src/_class_private_field_set.js","node_modules/@swc/helpers/src/_class_apply_descriptor_set.js","node_modules/@swc/helpers/src/_class_private_method_get.js","node_modules/@swc/helpers/src/_class_private_method_init.js","node_modules/@swc/helpers/src/_define_property.js","src/config.js","src/avatarGenerator.js","src/utils.js","src/app.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration\";\n\nexport default function _classPrivateMethodInit(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export const colorPalette = [\r\n    '#11133c',\r\n    '#f9ead4',\r\n    '#030504',\r\n    '#ffffff',\r\n\r\n    '#79fe9d',\r\n    '#f9a86f',\r\n    '#f71e4d',\r\n\r\n    '#060fbf',\r\n    '#1d43c6',\r\n    '#eef5f9',\r\n    '#c3d5e1',\r\n    '#f2f2f2',\r\n\r\n    '#fcf8f3',\r\n];\r\n\r\nexport const componentFiles = {\r\n    body: 1,\r\n    eye: 2,\r\n    nosemouth: 2,\r\n    ear: 2,\r\n};\r\n\r\nexport const publicUrl = process.env.NODE_ENV === 'development' ? '' : '/avatar-generator';\r\nexport const componentDir = 'components';\r\nexport const canvasSize = 256;\r\nexport const defaultInput = '7e4ef0cc-cce3-4c61-be83-7091185d75d2';\r\n","import { colorPalette, componentFiles } from './config';\r\n\r\nexport class AvatarGenerator {\r\n    #hash;\r\n\r\n    #generatedBgColor;\r\n    #generatedBodyColor;\r\n\r\n    static bodyScaleRange = [0.9, 1.1];\r\n\r\n    static eyesScaleRange = [0.6, 0.8];\r\n    static eyesDistanceRange = [24, 48];\r\n\r\n    static nousemouthScaleRange = [0.8, 1.2];\r\n\r\n    static earsScaleRange = [0.6, 0.8];\r\n    static earsRotation = [15, 45];\r\n    static earsTranslateDegRange = [225, 250]; // Left ear\r\n\r\n    constructor(hash) {\r\n        this.#hash = hash;\r\n    }\r\n\r\n    getBackgroundColor() {\r\n        this.#generatedBgColor = this.#getColor();\r\n\r\n        return this.#generatedBgColor;\r\n    }\r\n\r\n    getBodyConfig() {\r\n        const salt = 3;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBgColor, '#030504']);\r\n\r\n        this.#generatedBodyColor = color;\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.bodyScaleRange, salt);\r\n\r\n        const bodyConfig = {\r\n            color,\r\n            scale,\r\n        };\r\n\r\n        return bodyConfig;\r\n    }\r\n\r\n    getEyesConfig() {\r\n        const salt = 5;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor]);\r\n        const variant = this.#getVariant('eye', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.eyesScaleRange, salt);\r\n        const distance = this.#getValueInRangeInt(AvatarGenerator.eyesDistanceRange, salt);\r\n\r\n        const eyesConfig = {\r\n            color,\r\n            scale,\r\n            distance,\r\n            variant,\r\n        };\r\n\r\n        return eyesConfig;\r\n    }\r\n\r\n    getNosemouthConfig() {\r\n        const salt = 7;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor]);\r\n        const variant = this.#getVariant('nosemouth', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.nousemouthScaleRange, salt);\r\n\r\n        const nosemouthConfig = {\r\n            color,\r\n            scale,\r\n            variant,\r\n        };\r\n\r\n        return nosemouthConfig;\r\n    }\r\n\r\n    getEarsConfig() {\r\n        const salt = 11;\r\n\r\n        const color = this.#getColor(salt, [this.#generatedBodyColor, this.#generatedBgColor]);\r\n        const variant = this.#getVariant('ear', salt);\r\n\r\n        const scale = this.#getValueInRangeFloat(AvatarGenerator.earsScaleRange, salt);\r\n\r\n        const rotation = this.#getValueInRangeInt(AvatarGenerator.earsRotation, salt);\r\n        const translateDeg = this.#getValueInRangeInt(AvatarGenerator.earsTranslateDegRange, salt);\r\n\r\n        const earsConfig = {\r\n            color,\r\n            scale,\r\n            translateDeg,\r\n            variant,\r\n            rotation,\r\n        };\r\n\r\n        return earsConfig;\r\n    }\r\n\r\n    #getColor(salt = 1, excludeColors = undefined) {\r\n        const colors = excludeColors ? colorPalette.filter((c) => !excludeColors.includes(c)) : colorPalette;\r\n\r\n        return colors[this.#getSaltyHash(salt) % colors.length];\r\n    }\r\n\r\n    #getVariant(componentName, salt = 1) {\r\n        const variant = this.#getSaltyHash(salt) % componentFiles[componentName];\r\n\r\n        return variant;\r\n    }\r\n\r\n    #getValueInRangeFloat(range, salt = 1) {\r\n        const min = range[0] * 100;\r\n        const max = range[1] * 100;\r\n\r\n        const value = min + (this.#getSaltyHash(salt) % (max - min));\r\n\r\n        return value / 100;\r\n    }\r\n\r\n    #getValueInRangeInt(range, salt = 1) {\r\n        const min = range[0];\r\n        const max = range[1];\r\n\r\n        const value = min + (this.#getSaltyHash(salt) % (max - min));\r\n\r\n        return value;\r\n    }\r\n\r\n    #getSaltyHash(salt) {\r\n        const saltyHash = Math.abs( Math.round(this.#hash / salt));\r\n\r\n        return saltyHash;\r\n    }\r\n}\r\n","export function getHash(inputString) {\r\n    let hash = 0;\r\n    if (inputString?.length == 0) return hash;\r\n\r\n    inputString = inputString.toLowerCase();\r\n\r\n    for (let i = 0; i < inputString.length; i++) {\r\n        const char = inputString.charCodeAt(i);\r\n        hash = (hash << 5) - hash + char;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n\r\n    return Math.abs(hash);\r\n}\r\n","import { AvatarGenerator } from './avatarGenerator';\r\nimport { getHash } from './utils';\r\nimport { componentFiles, componentDir, canvasSize, defaultInput, publicUrl } from './config';\r\n\r\nlet componentContainerEl;\r\nlet imgRendererEl;\r\nlet svgEditorEl;\r\nlet canvasEl;\r\nlet btnDownloadAvatarEl;\r\nlet btnRandomInputEl;\r\nlet aDownloaderEl;\r\nlet imgAvatarPreviewEl;\r\nlet inputTextEl;\r\nlet hashEl;\r\n\r\nlet hash;\r\nlet canvasCtx;\r\n\r\nconst componentElements = {};\r\n\r\nfunction updatePreview() {\r\n    const image = canvasEl.toDataURL('image/png');\r\n\r\n    imgAvatarPreviewEl.src = image;\r\n}\r\n\r\nfunction downloadAvatar() {\r\n    const image = canvasEl.toDataURL('image/png');\r\n\r\n    aDownloaderEl.href = image;\r\n    aDownloaderEl.click();\r\n    aDownloaderEl.href = null;\r\n}\r\n\r\nfunction generateNewHash(newValue) {\r\n    hash = getHash(newValue);\r\n\r\n    hashEl.value = hash;\r\n\r\n    generateAvatar();\r\n}\r\n\r\nfunction randomizeInput() {\r\n    const randomInput = crypto.randomUUID();\r\n\r\n    inputTextEl.value = randomInput;\r\n\r\n    generateNewHash(randomInput);\r\n}\r\n\r\nfunction handleInputChange(event) {\r\n    const inputValue = event?.currentTarget?.value ?? '';\r\n\r\n    generateNewHash(inputValue);\r\n}\r\n\r\nfunction queryElements() {\r\n    componentContainerEl = document.querySelector('#componentContainer');\r\n    imgRendererEl = document.querySelector('#imgRenderer');\r\n    svgEditorEl = document.querySelector('#svgEditor');\r\n    btnDownloadAvatarEl = document.querySelector('#btnDownloadAvatar');\r\n    btnRandomInputEl = document.querySelector('#btnRandomInput');\r\n    aDownloaderEl = document.querySelector('#downloader');\r\n    imgAvatarPreviewEl = document.querySelector('#avatarPreview');\r\n    inputTextEl = document.querySelector('#inputText');\r\n    hashEl = document.querySelector('#hash');\r\n\r\n    canvasEl = document.querySelector('#canvas');\r\n}\r\n\r\nfunction initializeStuff() {\r\n    const urlInput = !!window.location.search\r\n        ? window.location.search\r\n        : window.location.pathname.length > 0\r\n        ? window.location.pathname\r\n        : undefined;\r\n\r\n    const inputValue = urlInput ? urlInput.substring(1) : defaultInput;\r\n\r\n    inputTextEl.value = inputValue;\r\n    hash = getHash(inputTextEl.value);\r\n    hashEl.value = hash;\r\n\r\n    canvasEl.width = canvasSize;\r\n    canvasEl.height = canvasSize;\r\n    canvasCtx = canvasEl.getContext('2d');\r\n\r\n    btnDownloadAvatarEl.addEventListener('click', downloadAvatar);\r\n    btnRandomInputEl.addEventListener('click', randomizeInput);\r\n    inputTextEl.addEventListener('change', handleInputChange);\r\n}\r\n\r\nasync function loadComponentImages() {\r\n    for (let i = 0; i < Object.keys(componentFiles).length; i++) {\r\n        var key = Object.keys(componentFiles)[i];\r\n        var count = componentFiles[key];\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            const imagePath = `${publicUrl}/${componentDir}/${key}_${j}.svg`;\r\n\r\n            const res = await fetch(imagePath);\r\n            const text = await res.text();\r\n\r\n            const svg = new DOMParser().parseFromString(text, 'text/xml').firstChild;\r\n\r\n            const svgId = `svg-${key}-${j}`;\r\n            svg.id = svgId;\r\n\r\n            componentContainerEl.appendChild(svg);\r\n\r\n            componentElements[svgId] = svg;\r\n        }\r\n    }\r\n}\r\n\r\nasync function renderNosemouth(generator) {\r\n    const nosemouthOffsetY = 8;\r\n\r\n    const nousemouthConfig = generator.getNosemouthConfig();\r\n\r\n    initSvgEditor(`nosemouth-${nousemouthConfig.variant}`);\r\n\r\n    const newSize = applySvgTransforms({ color: nousemouthConfig.color, scale: nousemouthConfig.scale });\r\n\r\n    const nousemouthX = canvasEl.width / 2 - newSize.width / 2;\r\n    const nousemouthY = canvasEl.height / 2 - newSize.height / 2 + nosemouthOffsetY;\r\n\r\n    await renderEditedSvgToCanvas(nousemouthX, nousemouthY);\r\n}\r\n\r\nasync function renderEye(eyesConfig) {\r\n    const eyeOffsetY = -24;\r\n\r\n    initSvgEditor(`eye-${eyesConfig.variant}`);\r\n\r\n    const newEyeSize = applySvgTransforms({ color: eyesConfig.color, scale: eyesConfig.scale });\r\n\r\n    const eyePositionX = canvasEl.width / 2 - newEyeSize.width / 2 - eyesConfig.distance;\r\n    const eyePositionY = canvasEl.height / 2 - newEyeSize.height / 2 + eyeOffsetY;\r\n\r\n    await renderEditedSvgToCanvas(eyePositionX, eyePositionY);\r\n}\r\n\r\nasync function renderEyes(generator) {\r\n    const eyesConfig = generator.getEyesConfig();\r\n\r\n    // Left eye\r\n    await renderEye(eyesConfig);\r\n\r\n    // Right eye\r\n    const rightEyeConfig = { ...eyesConfig, distance: -eyesConfig.distance };\r\n    await renderEye(rightEyeConfig);\r\n}\r\n\r\nasync function renderEar(earsConfig, bodyR) {\r\n    initSvgEditor(`ear-${earsConfig.variant}`);\r\n\r\n    const midPointDeg = 270;\r\n    const rotation = earsConfig.translateDeg - midPointDeg;\r\n\r\n    const newEarSize = applySvgTransforms({\r\n        color: earsConfig.color,\r\n        scale: earsConfig.scale,\r\n        rotation: rotation,\r\n    });\r\n\r\n    const positionX = canvasEl.width / 2 - newEarSize.width / 2;\r\n    const positionY = canvasEl.height / 2 - newEarSize.height / 2;\r\n\r\n    const translateDeg = earsConfig.translateDeg;\r\n    const translateRad = (Math.PI / 180) * translateDeg;\r\n\r\n    const translateX = (bodyR + newEarSize.width / 2) * Math.cos(translateRad);\r\n    const translateY = (bodyR + newEarSize.height / 2) * Math.sin(translateRad);\r\n\r\n    const newPositionX = positionX + translateX;\r\n    const newPositionY = positionY + translateY;\r\n\r\n    await renderEditedSvgToCanvas(newPositionX, newPositionY);\r\n}\r\n\r\nasync function renderEars(generator, bodySize) {\r\n    const earsConfig = generator.getEarsConfig();\r\n\r\n    const bodyR = Math.round(bodySize.width / 2);\r\n\r\n    // Render left ear\r\n    await renderEar(earsConfig, bodyR);\r\n\r\n    // Render right ear\r\n    // Mirror translateDeg and rotation\r\n    const midPointDeg = 270;\r\n    const rightEarTranslateDeg = earsConfig.translateDeg + 2 * (midPointDeg - earsConfig.translateDeg);\r\n    const rightEarRotation = -earsConfig.rotation;\r\n\r\n    const rightEarConfig = { ...earsConfig, translateDeg: rightEarTranslateDeg, rotation: rightEarRotation };\r\n\r\n    await renderEar(rightEarConfig, bodyR);\r\n}\r\n\r\nasync function renderBody(generator) {\r\n    const bodyConfig = generator.getBodyConfig();\r\n\r\n    initSvgEditor('body-0');\r\n\r\n    const newBodySize = applySvgTransforms({ color: bodyConfig.color, scale: bodyConfig.scale });\r\n\r\n    const bodyPositionX = canvasEl.width / 2 - newBodySize.width / 2;\r\n    const bodyPositionY = canvasEl.height / 2 - newBodySize.height / 2;\r\n\r\n    await renderEditedSvgToCanvas(bodyPositionX, bodyPositionY);\r\n\r\n    return newBodySize;\r\n}\r\n\r\nasync function renderSvgToImage(svgString) {\r\n    imgRendererEl.src = null;\r\n\r\n    var svg64 = btoa(svgString);\r\n    var b64Start = 'data:image/svg+xml;base64,';\r\n    var image64 = b64Start + svg64;\r\n\r\n    const imgLoadPromise = new Promise((resolve) => (imgRendererEl.onload = resolve));\r\n\r\n    imgRendererEl.src = image64;\r\n\r\n    return imgLoadPromise;\r\n}\r\n\r\nasync function renderEditedSvgToCanvas(x, y) {\r\n    const component = svgEditorEl.children[0];\r\n\r\n    const svgString = new XMLSerializer().serializeToString(component);\r\n\r\n    await renderSvgToImage(svgString);\r\n\r\n    canvasCtx.drawImage(imgRendererEl, x, y);\r\n\r\n    updatePreview();\r\n}\r\n\r\nfunction initSvgEditor(svgId) {\r\n    svgEditorEl.innerHTML = '';\r\n\r\n    const component = componentElements[`svg-${svgId}`];\r\n\r\n    const svgElement = component.cloneNode(true);\r\n    svgElement.id = 'svg-clone';\r\n\r\n    svgEditorEl.appendChild(svgElement);\r\n}\r\n\r\nfunction applySvgTransforms(params) {\r\n    const color = params.color;\r\n    const scale = params.scale;\r\n    const rotation = params.rotation;\r\n\r\n    const svgEl = document.querySelector('#svg-clone');\r\n\r\n    const fillableEl = svgEl.querySelector('[fill]');\r\n\r\n    fillableEl.setAttributeNS(null, 'fill', color);\r\n    fillableEl.setAttributeNS(null, 'stroke', color);\r\n\r\n    const groupEl = svgEl.querySelector('g');\r\n\r\n    let gTransform = groupEl.getAttributeNS(null, 'transform') ?? '';\r\n\r\n    gTransform += ` scale(${scale})`;\r\n\r\n    if (rotation) {\r\n        const svgCenterX = svgEl.clientWidth / 2;\r\n        const svgCenterY = svgEl.clientHeight / 2;\r\n\r\n        gTransform += ` rotate(${rotation} ${svgCenterX} ${svgCenterY})`;\r\n    }\r\n\r\n    groupEl.setAttributeNS(null, 'transform', gTransform);\r\n\r\n    const newWidth = svgEl.clientWidth * scale;\r\n    const newHeight = svgEl.clientHeight * scale;\r\n\r\n    svgEl.setAttributeNS(null, 'width', newWidth);\r\n    svgEl.setAttributeNS(null, 'height', newHeight);\r\n\r\n    return {\r\n        width: newWidth,\r\n        height: newHeight,\r\n    };\r\n}\r\n\r\nfunction setCanvasBackground(generator) {\r\n    const bgColor = generator.getBackgroundColor();\r\n\r\n    canvasCtx.fillStyle = bgColor;\r\n    canvasCtx.fillRect(0, 0, canvasEl.width, canvasEl.height);\r\n}\r\n\r\nasync function generateAvatar() {\r\n    const generator = new AvatarGenerator(hash);\r\n\r\n    setCanvasBackground(generator);\r\n\r\n    const bodySize = await renderBody(generator);\r\n\r\n    await renderEyes(generator);\r\n\r\n    await renderNosemouth(generator);\r\n\r\n    await renderEars(generator, bodySize);\r\n}\r\n\r\nasync function app() {\r\n    queryElements();\r\n\r\n    initializeStuff();\r\n\r\n    await loadComponentImages();\r\n\r\n    generateAvatar();\r\n}\r\n\r\nwindow.onload = app;\r\n"],"names":["$562ae4f7b3e8c1a4$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$5ccb2ac027e70296$export$2e2bcd8739ae039","descriptor","call","value","$86a869c06163ddac$export$2e2bcd8739ae039","$b4704688fbc18b94$export$2e2bcd8739ae039","obj","privateCollection","$2aba73354d41b8c0$export$2e2bcd8739ae039","set","$c9bdbb6d9b8824ef$export$2e2bcd8739ae039","writable","$4669f584925db56d$export$2e2bcd8739ae039","$fcea3dee3c1b3a2c$export$2e2bcd8739ae039","privateSet","fn","$8d964da4572a11f0$export$2e2bcd8739ae039","add","$ffa4240a3eaf3ac5$export$2e2bcd8739ae039","key","Object","defineProperty","enumerable","configurable","$173ec5528b4d4249$export$569885e57444f84a","$173ec5528b4d4249$export$4535031a8c1cfd19","body","eye","nosemouth","ear","_hash","WeakMap","_generatedBgColor","_generatedBodyColor","_getColor","WeakSet","_getVariant","_getValueInRangeFloat","_getValueInRangeInt","_getSaltyHash","$a61a8b917135f688$export$ddb6f44b1777fe96","getBackgroundColor","this","getColor","getBodyConfig","color","getValueInRangeFloat","bodyScaleRange","getEyesConfig","variant","getVariant","eyesScaleRange","getValueInRangeInt","eyesDistanceRange","getNosemouthConfig","nousemouthScaleRange","getEarsConfig","scale","earsScaleRange","rotation","earsRotation","earsTranslateDegRange","constructor","hash","salt","excludeColors","colors","filter","c","includes","getSaltyHash","length","componentName","range","min","max","Math","abs","round","$8424a3cd36d95c2d$export$adaba664e531641c","inputString","toLowerCase","i","charCodeAt","$81bb83f403a55568$var$componentContainerEl","$81bb83f403a55568$var$imgRendererEl","$81bb83f403a55568$var$svgEditorEl","$81bb83f403a55568$var$canvasEl","$81bb83f403a55568$var$btnDownloadAvatarEl","$81bb83f403a55568$var$btnRandomInputEl","$81bb83f403a55568$var$aDownloaderEl","$81bb83f403a55568$var$imgAvatarPreviewEl","$81bb83f403a55568$var$inputTextEl","$81bb83f403a55568$var$hashEl","$81bb83f403a55568$var$hash","$81bb83f403a55568$var$canvasCtx","$81bb83f403a55568$var$componentElements","$81bb83f403a55568$var$downloadAvatar","image","toDataURL","href","click","$81bb83f403a55568$var$generateNewHash","newValue","$81bb83f403a55568$var$generateAvatar","$81bb83f403a55568$var$randomizeInput","randomInput","crypto","randomUUID","$81bb83f403a55568$var$handleInputChange","event","ref","ref1","currentTarget","async","$81bb83f403a55568$var$renderEye","eyesConfig","$81bb83f403a55568$var$initSvgEditor","newEyeSize","$81bb83f403a55568$var$applySvgTransforms","eyePositionX","width","distance","eyePositionY","height","$81bb83f403a55568$var$renderEditedSvgToCanvas","$81bb83f403a55568$var$renderEar","earsConfig","bodyR","translateDeg","newEarSize","positionX","positionY","translateRad","PI","newPositionX","cos","newPositionY","sin","x","y","component","children","svgString","XMLSerializer","serializeToString","src","image64","btoa","imgLoadPromise","Promise","resolve","onload","$81bb83f403a55568$var$renderSvgToImage","drawImage","$81bb83f403a55568$var$updatePreview","svgId","innerHTML","svgElement","cloneNode","id","appendChild","params","svgEl","document","querySelector","fillableEl","setAttributeNS","groupEl","gTransform","getAttributeNS","clientWidth","clientHeight","newWidth","newHeight","generator","bgColor","fillStyle","fillRect","$81bb83f403a55568$var$setCanvasBackground","bodySize","bodyConfig","newBodySize","bodyPositionX","bodyPositionY","$81bb83f403a55568$var$renderBody","rightEyeConfig","$81bb83f403a55568$var$renderEyes","nousemouthConfig","newSize","nousemouthX","nousemouthY","$81bb83f403a55568$var$renderNosemouth","rightEarTranslateDeg","rightEarRotation","rightEarConfig","$81bb83f403a55568$var$renderEars","window","urlInput","location","search","pathname","undefined","inputValue","substring","getContext","addEventListener","$81bb83f403a55568$var$initializeStuff","keys","count","j","imagePath","res","fetch","text","svg","DOMParser","parseFromString","firstChild","$81bb83f403a55568$var$loadComponentImages"],"version":3,"file":"index.12b73463.js.map"}